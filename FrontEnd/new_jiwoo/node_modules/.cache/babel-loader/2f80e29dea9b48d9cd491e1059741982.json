{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createElementVNode as _createElementVNode, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2ba7ee28\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"btn btn-secondary btn-lg\",\n  type: \"button\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn btn-lg btn-secondary dropdown-toggle dropdown-toggle-split\",\n  \"data-bs-toggle\": \"dropdown\",\n  \"aria-expanded\": \"false\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"visually-hidden\"\n}, \"Toggle Dropdown\")], -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"dropdown-menu\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  const _component_router_view = _resolveComponent(\"router-view\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" 카테고리 메뉴 부분 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.categoryIndex, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"btn-group\",\n      key: index\n    }, [_createElementVNode(\"button\", _hoisted_1, [_createCommentVNode(\" 대분류 카테고리 클릭시 해당 카텍리 품목 페이지 이동 \"), index == '상의' ? (_openBlock(), _createBlock(_component_router_link, {\n      key: 0,\n      onClick: $options.topdata,\n      to: {\n        name: '상의'\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(index), 1\n      /* TEXT */\n      )]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"onClick\"])) : _createCommentVNode(\"v-if\", true), index == '바지' ? (_openBlock(), _createBlock(_component_router_link, {\n      key: 1,\n      onClick: $options.pantdata,\n      to: {\n        name: '바지'\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(index), 1\n      /* TEXT */\n      )]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"onClick\"])) : _createCommentVNode(\"v-if\", true), index == '신발' ? (_openBlock(), _createBlock(_component_router_link, {\n      key: 2,\n      onClick: $options.shoesdata,\n      to: {\n        name: '신발'\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(index), 1\n      /* TEXT */\n      )]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"onClick\"])) : _createCommentVNode(\"v-if\", true), index == '치마' ? (_openBlock(), _createBlock(_component_router_link, {\n      key: 3,\n      onClick: $options.skirtdata,\n      to: {\n        name: '치마'\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(index), 1\n      /* TEXT */\n      )]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"onClick\"])) : _createCommentVNode(\"v-if\", true), index == '모자' ? (_openBlock(), _createBlock(_component_router_link, {\n      key: 4,\n      onClick: $options.hatdata,\n      to: {\n        name: '모자'\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(index), 1\n      /* TEXT */\n      )]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 소분류 선택 메뉴, 정보 띄우기만 하고 선택시 기능 미구현 상태 \"), _hoisted_2, _createCommentVNode(\" 소분류 메뉴 리스트 \"), _createElementVNode(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item, small => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: small\n      }, _toDisplayString(small), 1\n      /* TEXT */\n      );\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createVNode(_component_router_view)]);\n}","map":{"version":3,"mappings":";;;;;EAIcA,KAAK,EAAC;EAA2BC,IAAI,EAAC;;;gEAU9CC,oBAES,QAFT,EAES;EAFDD,IAAI,EAAC,QAEJ;EAFaD,KAAK,EAAC,gEAEnB;EAFoF,kBAAe,UAEnG;EAF8G,iBAAc;AAE5H,CAFT,gBACEE,oBAAoD,MAApD,EAAoD;EAA9CF,KAAK,EAAC;AAAwC,CAApD,EAA8B,iBAA9B,EADF;;AAAA;;;EAIMA,KAAK,EAAC;;;;;;;uBAjBhBG,oBAuBM,KAvBN,EAuBM,IAvBN,EAuBM,CAtBJC,mCAsBI,qBArBJD,oBAkBME,SAlBN,EAkBM,IAlBN,EAkBMC,YAlB4DC,mBAkB5D,EAlByE,CAA7BC,IAA6B,EAAvBC,KAAuB,KAAlB;yBAA7DN,oBAkBM,KAlBN,EAkBM;MAlBDH,KAAK,EAAC,WAkBL;MAlBwBU,GAAG,EAAED;IAkB7B,CAlBN,GACEP,oBAOS,QAPT,cAOS,CANPE,sDAMO,EALiCK,KAAK,0BAA7CE,aAAiGC,sBAAjG,EAAiG;YAAA;MAA/EC,OAAK,EAAEC,gBAAwE;MAA3CC,EAAE,EAAE;QAAAC;MAAA;IAAuC,CAAjG;wBAAwE,MAAW,mCAARP,QAAK;MAAA;OAAG;;;;KAAnF;;IAAA,mDAKO,EAJkCA,KAAK,0BAA9CE,aAAkGC,sBAAlG,EAAkG;YAAA;MAAhFC,OAAK,EAAEC,iBAAyE;MAA3CC,EAAE,EAAE;QAAAC;MAAA;IAAuC,CAAlG;wBAAyE,MAAW,mCAARP,QAAK;MAAA;OAAG;;;;KAApF;;IAAA,mDAIO,EAHmCA,KAAK,0BAA/CE,aAAmGC,sBAAnG,EAAmG;YAAA;MAAjFC,OAAK,EAAEC,kBAA0E;MAA3CC,EAAE,EAAE;QAAAC;MAAA;IAAuC,CAAnG;wBAA0E,MAAW,mCAARP,QAAK;MAAA;OAAG;;;;KAArF;;IAAA,mDAGO,EAFmCA,KAAK,0BAA/CE,aAAmGC,sBAAnG,EAAmG;YAAA;MAAjFC,OAAK,EAAEC,kBAA0E;MAA3CC,EAAE,EAAE;QAAAC;MAAA;IAAuC,CAAnG;wBAA0E,MAAW,mCAARP,QAAK;MAAA;OAAG;;;;KAArF;;IAAA,mDAEO,EADiCA,KAAK,0BAA7CE,aAAiGC,sBAAjG,EAAiG;YAAA;MAA/EC,OAAK,EAAEC,gBAAwE;MAA3CC,EAAE,EAAE;QAAAC;MAAA;IAAuC,CAAjG;wBAAwE,MAAW,mCAARP,QAAK;MAAA;OAAG;;;;KAAnF;;IAAA,mDACO,CAPT,GASAL,8DACAa,YAGAb,qCACEF,oBAEK,IAFL,cAEK,oBADHC,oBAA8DE,SAA9D,EAA8D,IAA9D,EAA8DC,YAAvBE,IAAuB,EAAhCU,KAAa,IAAR;2BAAnCf,oBAA8D,IAA9D,EAA8D;QAAnDO,GAAG,EAAEQ;MAA8C,CAA9D,EAAqBC,iBAA4BD,KAA5B,CAArB,EAAsD;MAAA;MAAtD;KAA8D,CAA9D;;IAAA,CACG,EAFL,EAfJ;GAkBM,CAlBN;;EAAA,CAqBI,GADJE,aAA2BC,sBAA3B,CACI,CAvBN","names":["class","type","_createElementVNode","_createElementBlock","_createCommentVNode","_Fragment","_renderList","$data","item","index","key","_createBlock","_component_router_link","onClick","$options","to","name","_hoisted_2","small","_toDisplayString","_createVNode","_component_router_view"],"sourceRoot":"","sources":["/Users/azabell/Desktop/SIAT_FinalProject/FrontEnd/new_jiwoo/src/components/CategoryList.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 카테고리 메뉴 부분 -->\n    <div class=\"btn-group\" v-bind:key=\"index\" v-for=\"(item, index) in categoryIndex\">\n      <button class=\"btn btn-secondary btn-lg\" type=\"button\">\n        <!-- 대분류 카테고리 클릭시 해당 카텍리 품목 페이지 이동 -->\n        <router-link v-on:click=\"topdata\" v-if=\"index=='상의'\" :to=\"{name: '상의'}\">{{ index }}</router-link>\n        <router-link v-on:click=\"pantdata\" v-if=\"index=='바지'\" :to=\"{name: '바지'}\">{{ index }}</router-link>\n        <router-link v-on:click=\"shoesdata\" v-if=\"index=='신발'\" :to=\"{name: '신발'}\">{{ index }}</router-link>\n        <router-link v-on:click=\"skirtdata\" v-if=\"index=='치마'\" :to=\"{name: '치마'}\">{{ index }}</router-link>\n        <router-link v-on:click=\"hatdata\" v-if=\"index=='모자'\" :to=\"{name: '모자'}\">{{ index }}</router-link>\n      </button>\n\n      <!-- 소분류 선택 메뉴, 정보 띄우기만 하고 선택시 기능 미구현 상태 -->\n      <button type=\"button\" class=\"btn btn-lg btn-secondary dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n        <span class=\"visually-hidden\">Toggle Dropdown</span>\n      </button>\n      <!-- 소분류 메뉴 리스트 -->\n        <ul class=\"dropdown-menu\">\n          <li v-bind:key=\"small\" v-for=\"small in item\"> {{ small }}</li>\n        </ul>\n    </div>\n\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport storeProduct from '@/store/recommendProducts'\n\n\nconst productCodeList = Object.values(storeProduct.state.originProductList)\nconst url = 'http:// 192.168.219.162:9292'\nexport default {\n  data () {\n    return {\n      categoryIndex : [],\n    }\n  },\n  // 백엔드의 카테고리 정보 갖고와서 활용\n  mounted () {\n    var vm = this\n    axios.post(url+'/pro/categoryData')\n        .then(function (response) {\n          vm.categoryIndex = response.data\n          console.log('카테고리 데이터 : ',response.data)\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n  },\n  // 각 카테고리 클릭시 카테고리 품목 페이지로 이동\n   methods: {\n    topdata () {\n      var topCodeList = []\n      axios.post(url+'/pro/proListByCategory',\n      {\n        //백엔드에 원하는 정보 요청하기 (select 정보)\n        proList: productCodeList,\n        categoryLargeName : '상의',\n        categorySmallName : 'none'\n      })\n        .then(function (response) {\n          //DB에서 조회한 정보를 프론트로 던져준다.\n          // console.log(response.data)\n          \n          topCodeList.push(response.data.data) //각 카테고리 품목별 상품 코드를 저장해주는 부분\n          storeProduct.state.categoryTopList = topCodeList //store에 각 상품 코드를 저장한다.\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n      },\n      pantdata () {\n      var pantCodeList = []\n      axios.post(url+'/pro/proListByCategory',\n      {\n        proList: productCodeList,\n        categoryLargeName : '바지',\n        categorySmallName : 'none'\n      })\n        .then(function (response) {\n          pantCodeList.push(response.data.data)\n          storeProduct.commit('updateCategoryPantsList', pantCodeList)\n          // storeProduct.state.categoryPantList = pantCodeList\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n      },\n      shoesdata () {\n        var shoesCodeList = []\n        axios.post(url+'/pro/proListByCategory',\n        {\n          proList: productCodeList,\n          categoryLargeName : '신발',\n          categorySmallName : 'none'\n        })\n          .then(function (response) {\n            shoesCodeList.push(response.data.data)\n            storeProduct.commit('updateCategoryShoesList', shoesCodeList)\n            // storeProduct.state.categoryShoesList = shoesCodeList\n          })\n          .catch(function (error) {\n            console.log(error)\n          })\n      },\n      skirtdata () {\n        var skirtCodeList = []\n        axios.post(url+'/pro/proListByCategory',\n        {\n          proList: productCodeList,\n          categoryLargeName : '치마',\n          categorySmallName : 'none'\n        })\n          .then(function (response) {\n            skirtCodeList.push(response.data.data)\n            console.log('skirtCodeList : ',skirtCodeList)\n            storeProduct.commit('updateCategorySkirtList', skirtCodeList)\n            // storeProduct.state.categorySkirtList = skirtCodeList\n          })\n          .catch(function (error) {\n            console.log(error)\n          })\n      },\n      hatdata () {\n        var hatCodeList = []\n        axios.post(url+'/pro/proListByCategory',\n        {\n          proList: productCodeList,\n          categoryLargeName : '모자',\n          categorySmallName : 'none'\n        })\n          .then(function (response) {\n            hatCodeList.push(response.data.data)\n            // storeProduct.state.categoryHatList = hatCodeList\n            storeProduct.commit('updateCategoryHatList', hatCodeList)\n          })\n          .catch(function (error) {\n            console.log(error)\n          })\n      }\n      \n    }\n}\n</script>\n  \n<style scoped>\nul nav {\n  display:inline-block;\n}\nul nav li {\n   list-style:none;\n}\n.btn-group {\n  display:inline-block;\n  padding:30px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}