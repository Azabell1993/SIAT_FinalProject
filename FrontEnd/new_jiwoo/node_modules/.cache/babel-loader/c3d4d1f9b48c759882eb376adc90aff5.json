{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Sign Up 페이지입니다.\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  for: \"memID\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"아이디 : \");\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", {\n  id: \"userid_msg\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = {\n  key: 0,\n  class: \"badge badge-danger mt-1\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = {\n  for: \"memPW\"\n};\n\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\"비밀번호 : \");\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_11 = {\n  for: \"memPWCheck\"\n};\n\nconst _hoisted_12 = /*#__PURE__*/_createTextVNode(\"비밀번호 확인 : \");\n\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_14 = {\n  for: \"memName\"\n};\n\nconst _hoisted_15 = /*#__PURE__*/_createTextVNode(\"이름 : \");\n\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_17 = {\n  for: \"memAddr\"\n};\n\nconst _hoisted_18 = /*#__PURE__*/_createTextVNode(\"주소 : \");\n\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_20 = {\n  for: \"memPhone\"\n};\n\nconst _hoisted_21 = /*#__PURE__*/_createTextVNode(\"전화번호 : \");\n\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_23 = {\n  for: \"memEmail\"\n};\n\nconst _hoisted_24 = /*#__PURE__*/_createTextVNode(\"이메일 : \");\n\nconst _hoisted_25 = {\n  key: 1,\n  class: \"badge badge-danger mt-1\"\n};\nconst _hoisted_26 = {\n  key: 2,\n  class: \"badge badge-danger mt-1\"\n};\n\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_28 = {\n  for: \"memBirth\"\n};\n\nconst _hoisted_29 = /*#__PURE__*/_createTextVNode(\"생년월일 : \");\n\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_31 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"reset\",\n  value: \"초기화\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"submit\",\n  value: \"가입\"\n}, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[10] || (_cache[10] = _withModifiers((...args) => _ctx.submitForm && _ctx.submitForm(...args), [\"prevent\"]))\n  }, [_hoisted_2, _createElementVNode(\"label\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"memID\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.memID = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.memID]]), _hoisted_5]), !_ctx.availableMemID ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"이미 사용중인 아이디입니다.\")) : _createCommentVNode(\"v-if\", true), _hoisted_7, _createElementVNode(\"label\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"memPW\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.memPW = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.memPW]])]), _hoisted_10, _createElementVNode(\"label\", _hoisted_11, [_hoisted_12, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"memPWCheck\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.memPWCheck = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.memPWCheck]])]), _hoisted_13, _createElementVNode(\"label\", _hoisted_14, [_hoisted_15, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"memName\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.memName = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.memName]])]), _hoisted_16, _createElementVNode(\"label\", _hoisted_17, [_hoisted_18, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"memAddr\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.memAddr = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.memAddr]])]), _hoisted_19, _createElementVNode(\"label\", _hoisted_20, [_hoisted_21, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"memPhone\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.memPhone = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.memPhone]])]), _hoisted_22, _createElementVNode(\"label\", _hoisted_23, [_hoisted_24, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"memEmail\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.memEmail = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.memEmail]])]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.email = $event),\n    placeholder: \"Enter email\",\n    onBlur: _cache[8] || (_cache[8] = (...args) => _ctx.checkDuplicate && _ctx.checkDuplicate(...args))\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, _ctx.email]]), !_ctx.availableEmail ? (_openBlock(), _createElementBlock(\"span\", _hoisted_25, \"이미 사용중인 이메일입니다.\")) : _createCommentVNode(\"v-if\", true), !_ctx.availableEmailForm ? (_openBlock(), _createElementBlock(\"span\", _hoisted_26, \"이메일 형식이 다릅니다.\")) : _createCommentVNode(\"v-if\", true), _hoisted_27, _createElementVNode(\"label\", _hoisted_28, [_hoisted_29, _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"memBirth\",\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => _ctx.memBirth = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.memBirth]])]), _hoisted_30, _hoisted_31, _hoisted_32], 32\n  /* HYDRATE_EVENTS */\n  )]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","for","id","type","value","_createElementBlock","onSubmit","_ctx","_hoisted_2","$event","_hoisted_5","_hoisted_7","_hoisted_10","_hoisted_13","_hoisted_16","_hoisted_19","_hoisted_22","placeholder","onBlur","_hoisted_27","_hoisted_30","_hoisted_31","_hoisted_32"],"sourceRoot":"","sources":["/Users/azabell/Desktop/SIAT_FinalProject/FrontEnd/new_jiwoo/src/views/SignView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n\t\t<form @submit.prevent=\"submitForm\">\n    <div>\n      <h1>Sign Up 페이지입니다.</h1>\n      </div>\n\n      <label for=\"memID\">아이디 : <input type=\"text\" id=\"memID\" v-model=\"memID\"><p id=\"userid_msg\"></p></label>\n      <span class=\"badge badge-danger mt-1\" v-if=\"!availableMemID\">이미 사용중인 아이디입니다.</span>\n      <br>\n      <label for=\"memPW\">비밀번호 : <input type=\"password\" id=\"memPW\" v-model=\"memPW\"></label><br>\n      <label for=\"memPWCheck\">비밀번호 확인 : <input type=\"password\" id=\"memPWCheck\" v-model=\"memPWCheck\"></label><br>\n      <label for=\"memName\">이름 : <input type=\"text\" id=\"memName\" v-model=\"memName\"></label><br>\n      <label for=\"memAddr\">주소 : <input type=\"text\" id=\"memAddr\" v-model=\"memAddr\"></label><br>\n      <label for=\"memPhone\">전화번호 : <input type=\"text\" id=\"memPhone\" v-model=\"memPhone\"></label><br>\n      <label for=\"memEmail\">이메일 : <input type=\"email\" id=\"memEmail\" v-model=\"memEmail\"></label>\n      <input type=\"text\" class=\"form-control\" id=\"email\" v-model=\"email\" placeholder=\"Enter email\" @blur=\"checkDuplicate\" />\n      <span class=\"badge badge-danger mt-1\" v-if=\"!availableEmail\">이미 사용중인 이메일입니다.</span>\n      <span class=\"badge badge-danger mt-1\" v-if=\"!availableEmailForm\">이메일 형식이 다릅니다.</span>\n      <br>\n      <label for=\"memBirth\">생년월일 : <input type=\"date\" id=\"memBirth\" v-model=\"memBirth\"></label><br>\n      <input type=\"reset\" value=\"초기화\">\n      <input type=\"submit\" value=\"가입\">\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SignupForm',\n  data() {\n    return {\n        memID:'',\n        memPW:'',\n        memPWCheck:'',\n        memName:'',\n        memAddr:'',\n        memPhone:'',\n        memEmail:'',\n        memBirth:'',\n    };\n  },\n  methods: {\n    SignupForm() {\n      console.log(\"SignView Test\")\n      axios.post('http://192.168.0.81:8081/loginProc', {\n        memID: this.memID,\n        memPW: this.memPW,\n        memPWCheck: this.memPWCheck,\n        memName: this.memName,\n        memAddr: this.memAddr,\n        memPhone: this.memPhone,\n        memEmail: this.memEmail,\n        memBirth: this.memBirth\n      }).catch(function() {\n        console.log('failed')\n      })\n    }\n  }\n}\n\nfunction checkDuplicate() {\n\t//일단은 사용가능한 이메일로 true로 초기화 한다.\n\tthis.availableEmail = true;\n    \n    //이메일 유효성을 검사한다.\n\tif (!validateEmail(this.email)) {\n\t\t//유효성이 틀리다면 data 값을 false로 한다.\n        this.availableEmailForm = false;\n\t\treturn;\n\t} else {\n\t\tthis.availableEmailForm = true;\n\t}\n    \n    //이메일 중복체크를 한다.\n\tconst response = await checkDuplicateEmail(this.email);\n\tif (!response.data) {\n\t\tthis.availableEmail = false;\n\t} else {\n\t\tthis.availableEmail = true;\n\t}\n}\n\n\n</script>\n"]},"metadata":{},"sourceType":"module"}