{"ast":null,"code":"import axios from 'axios';\nimport store from '@/store/index';\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\nexport default {\n  data() {\n    return {\n      memID: this.memID,\n      memPW: this.memPW\n    };\n  },\n\n  methods: {\n    sendPost() {\n      const userId = this.memID; //변수 선언 이 값을 그대로 쓰겠다. 자스 내에선 this 선언 부분이 다를 수있음. 당분간 이게 좀 안전할 듯\n      //console.log(userId);\n\n      axios.post('http://192.168.219.180:9292/mem/loginProc', {\n        memID: this.memID,\n        memPW: this.memPW\n      }).then(function (response) {\n        //될떄 실행하는 함수\n        //console.log(response.data)\n        if (response.data.mem.memID == userId) {\n          alert(\"로그인이 되었습니다.\"); // console.log(\"ID가 일치합니다.\")\n          //location.href = \"http://localhost:8080/\"\n\n          axios.post('http://192.168.219.180:9292/mem/memberInfo', {\n            memID: userId\n          }).then(function (response) {\n            // console.log(response.data)\n            // console.log('memPW : ',response.data.data.memPW)\n            store.commit('updateloginUserID', response.data.data.memID); //로그인이 성공하는 과정에서 memID를 조회해서 정보를 가져오는건가?\n            // console.log('storer 값 저장 확인 : ', store.state.loginUser.memID)\n            // console.log('memID : ', response.data.data.memID)\n\n            store.commit('updateloginUserPW', response.data.data.memPW); // console.log('memPW : ', response.data.data.memPW)\n\n            store.commit('updateloginUserName', response.data.data.memName); // console.log('memName : ', response.data.data.memName)\n\n            store.commit('updateloginUserAddr', response.data.data.memAddr); // console.log('memAddr : ', response.data.data.memAddr)\n\n            store.commit('updateloginUserPhone', response.data.data.memPhone); // console.log('memPhone : ', response.data.data.memPhone)\n\n            store.commit('updateloginUserBirth', response.data.data.memBirth); // console.log('memBirth : ', response.data.data.memBirth)\n\n            store.commit('updateloginUserBirth', response.data.data.memBirth); // console.log('memBirth : ', response.data.data.memBirth)\n\n            store.commit('updateloginUserRole', response.data.data.memRole); // console.log('memRole : ', response.data.data.memRole.roleCode)\n\n            store.commit('updateloginUserEmail', response.data.data.memEmail); // console.log('memEmail : ', response.data.data.memEmail)\n          });\n        } else {\n          console.log('error test');\n          alert('ID 혹은 비밀번호가 틀렸습니다');\n        } // store.commit('updateloginUserID',this.memID)\n\n\n        console.log(`login : ${store.state.loginUser.memID}`); //store에 있는 ID 값 체크\n      }).catch(function (error) {\n        // 뭔가 실패할때 쓰는 함수\n        console.log(error);\n      });\n      console.log(\"end\");\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAcA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,6BAA9B,IAA+D,GAA/D;AAEA,eAAe;EAEbC,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,KAAKA,KADP;MAELC,KAAI,EAAI,KAAKA;IAFR,CAAP;EAID,CAPY;;EASbC,OAAO,EAAE;IACPC,QAAO,GAAK;MACV,MAAMC,MAAK,GAAI,KAAKJ,KAApB,CADU,CACiB;MAE3B;;MAEAN,KAAK,CAACW,IAAN,CAAW,2CAAX,EAAwD;QACtDL,KAAK,EAAE,KAAKA,KAD0C;QAEtDC,KAAK,EAAE,KAAKA;MAF0C,CAAxD,EAIGK,IAJH,CAIQ,UAAUC,QAAV,EAAoB;QAAE;QAC1B;QACA,IAAGA,QAAQ,CAACR,IAAT,CAAcS,GAAd,CAAkBR,KAAlB,IAA2BI,MAA9B,EAAqC;UACnCK,KAAK,CAAC,aAAD,CAAL,CADmC,CAEnC;UACA;;UAEAf,KAAK,CAACW,IAAN,CAAW,4CAAX,EACA;YACEL,KAAI,EAAII;UADV,CADA,EAICE,IAJD,CAIM,UAASC,QAAT,EAAmB;YACvB;YACA;YAEAZ,KAAK,CAACe,MAAN,CAAa,mBAAb,EAAkCH,QAAQ,CAACR,IAAT,CAAcA,IAAd,CAAmBC,KAArD,EAJuB,CAIqC;YAC5D;YACA;;YAEAL,KAAK,CAACe,MAAN,CAAa,mBAAb,EAAkCH,QAAQ,CAACR,IAAT,CAAcA,IAAd,CAAmBE,KAArD,EARuB,CASvB;;YAEAN,KAAK,CAACe,MAAN,CAAa,qBAAb,EAAoCH,QAAQ,CAACR,IAAT,CAAcA,IAAd,CAAmBY,OAAvD,EAXuB,CAYvB;;YAEAhB,KAAK,CAACe,MAAN,CAAa,qBAAb,EAAoCH,QAAQ,CAACR,IAAT,CAAcA,IAAd,CAAmBa,OAAvD,EAduB,CAevB;;YAEAjB,KAAK,CAACe,MAAN,CAAa,sBAAb,EAAqCH,QAAQ,CAACR,IAAT,CAAcA,IAAd,CAAmBc,QAAxD,EAjBuB,CAkBvB;;YAEAlB,KAAK,CAACe,MAAN,CAAa,sBAAb,EAAqCH,QAAQ,CAACR,IAAT,CAAcA,IAAd,CAAmBe,QAAxD,EApBuB,CAqBvB;;YAEAnB,KAAK,CAACe,MAAN,CAAa,sBAAb,EAAqCH,QAAQ,CAACR,IAAT,CAAcA,IAAd,CAAmBe,QAAxD,EAvBuB,CAwBvB;;YAEAnB,KAAK,CAACe,MAAN,CAAa,qBAAb,EAAoCH,QAAQ,CAACR,IAAT,CAAcA,IAAd,CAAmBgB,OAAvD,EA1BuB,CA2BvB;;YAEApB,KAAK,CAACe,MAAN,CAAa,sBAAb,EAAqCH,QAAQ,CAACR,IAAT,CAAcA,IAAd,CAAmBiB,QAAxD,EA7BuB,CA8BvB;UAED,CApCD;QAqCF,CA1CA,MA0CM;UACJC,OAAO,CAACC,GAAR,CAAY,YAAZ;UACAT,KAAK,CAAC,mBAAD,CAAL;QACF,CA/CwB,CAgDxB;;;QACAQ,OAAO,CAACC,GAAR,CAAa,WAAUvB,KAAK,CAACwB,KAAN,CAAYC,SAAZ,CAAsBpB,KAAM,EAAnD,EAjDwB,CAiD8B;MACvD,CAtDH,EAsDKqB,KAtDL,CAsDW,UAAUC,KAAV,EAAiB;QAAE;QAC1BL,OAAO,CAACC,GAAR,CAAYI,KAAZ;MACD,CAxDH;MAyDEL,OAAO,CAACC,GAAR,CAAY,KAAZ;IACJ;;EAhEO;AATI,CAAf","names":["axios","store","defaults","headers","common","data","memID","memPW","methods","sendPost","userId","post","then","response","mem","alert","commit","memName","memAddr","memPhone","memBirth","memRole","memEmail","console","log","state","loginUser","catch","error"],"sourceRoot":"","sources":["/Users/azabell/Desktop/SIAT_FinalProject/FrontEnd/new_jiwoo/src/views/LoginView.vue"],"sourcesContent":["<template>\n    <div>\n    <h1>Login 페이지입니다.</h1>\n    \n    <form @submit.prevent=\"sendPost\">  <!-- sendPost 함수 실행 -->\n        <label for=\"memID\">ID : <input id=\"memID\" v-model=\"memID\" type=\"text\"></label><br><br>\n        <label for=\"memPW\">PW : <input id=\"memPW\" v-model=\"memPW\" type=\"password\"></label><br><br>\n        <button>Send</button><br>\n        <!-- @click=\"onClickRedirect()\" 로그인 성공시 화면 이동 -->\n\n    </form>\n    </div>\n</template>\n<script>\nimport axios from 'axios'\nimport store from '@/store/index'\n\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*'\n\nexport default {\n  \n  data() {\n    return {\n      memID: this.memID,\n      memPW : this.memPW\n    }\n  },\n  \n  methods: {\n    sendPost () {\n      const userId = this.memID; //변수 선언 이 값을 그대로 쓰겠다. 자스 내에선 this 선언 부분이 다를 수있음. 당분간 이게 좀 안전할 듯\n\n      //console.log(userId);\n\n      axios.post('http://192.168.219.180:9292/mem/loginProc', {\n        memID: this.memID,\n        memPW: this.memPW,\n      })\n        .then(function (response) { //될떄 실행하는 함수\n          //console.log(response.data)\n          if(response.data.mem.memID == userId){\n            alert(\"로그인이 되었습니다.\");\n            // console.log(\"ID가 일치합니다.\")\n            //location.href = \"http://localhost:8080/\"\n            \n            axios.post('http://192.168.219.180:9292/mem/memberInfo', \n            {\n              memID : userId\n            })\n            .then(function(response) {\n              // console.log(response.data)\n              // console.log('memPW : ',response.data.data.memPW)\n\n              store.commit('updateloginUserID', response.data.data.memID) //로그인이 성공하는 과정에서 memID를 조회해서 정보를 가져오는건가?\n              // console.log('storer 값 저장 확인 : ', store.state.loginUser.memID)\n              // console.log('memID : ', response.data.data.memID)\n\n              store.commit('updateloginUserPW', response.data.data.memPW)\n              // console.log('memPW : ', response.data.data.memPW)\n\n              store.commit('updateloginUserName', response.data.data.memName)\n              // console.log('memName : ', response.data.data.memName)\n\n              store.commit('updateloginUserAddr', response.data.data.memAddr)\n              // console.log('memAddr : ', response.data.data.memAddr)\n\n              store.commit('updateloginUserPhone', response.data.data.memPhone)\n              // console.log('memPhone : ', response.data.data.memPhone)\n\n              store.commit('updateloginUserBirth', response.data.data.memBirth)\n              // console.log('memBirth : ', response.data.data.memBirth)\n\n              store.commit('updateloginUserBirth', response.data.data.memBirth)\n              // console.log('memBirth : ', response.data.data.memBirth)\n\n              store.commit('updateloginUserRole', response.data.data.memRole)\n              // console.log('memRole : ', response.data.data.memRole.roleCode)\n\n              store.commit('updateloginUserEmail', response.data.data.memEmail)\n              // console.log('memEmail : ', response.data.data.memEmail)\n             \n            })\n          } else{\n            console.log('error test');\n            alert('ID 혹은 비밀번호가 틀렸습니다')\n          }\n          // store.commit('updateloginUserID',this.memID)\n          console.log(`login : ${store.state.loginUser.memID}`) //store에 있는 ID 값 체크\n        }).catch(function (error) { // 뭔가 실패할때 쓰는 함수\n          console.log(error);\n        })\n        console.log(\"end\")\n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}