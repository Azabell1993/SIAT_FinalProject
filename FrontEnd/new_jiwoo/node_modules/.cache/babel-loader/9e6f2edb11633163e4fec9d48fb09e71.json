{"ast":null,"code":"import axios from 'axios';\nimport store from '@/store/index';\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\nexport default {\n  methods: {\n    sendPost() {\n      const userId = this.memID; //변수 선언 이 값을 그대로 쓰겠다. 자스 내에선 this 선언 부분이 다를 수있음. 당분간 이게 좀 안전할 듯\n\n      console.log(userId);\n      axios.post('http://192.168.219.160:9292/mem/loginProc', {\n        memID: this.memID,\n        memPW: this.memPW\n      }).then(function (response) {\n        //될떄 실행하는 함수\n        console.log(response.data);\n\n        if (response.data.mem.memID == userId) {\n          console.log(\"ID가 일치합니다.\");\n          location.href = \"http://localhost:8080/\";\n          axios.post('http://192.168.219.160:9292/mem/memberInfo', {\n            memID: userId\n          }).then(function (response) {\n            // console.log(response.data)\n            // console.log('memPW : ',response.data.data.memPW)\n            // store.commit('updateloginUserID', userId) //로그인이 성공하는 과정에서 memID를 조회해서 정보를 가져오는건가?\n            store.commit('updateloginUserID', response.data.data.memID);\n            store.commit('updateloginUserPW', response.data.data.memPW);\n            store.commit('updateloginUserName', response.data.data.memName);\n            console.log('store에 있는 Name : ', store.state.loginUser.memName);\n          });\n        } else {\n          alert('ID 혹은 비밀번호가 틀렸습니다');\n        } //store.commit('updateloginUserID',this.memID)\n\n\n        console.log(`login : ${store.state.loginUser.memID}`); //store에 있는 ID 값 체크\n      }).catch(function (error) {\n        // 뭔가 실패할때 쓰는 함수\n        console.log(error);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAcA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,6BAA9B,IAA+D,GAA/D;AAEA,eAAe;EACbC,OAAO,EAAE;IACPC,QAAO,GAAK;MACV,MAAMC,MAAK,GAAI,KAAKC,KAApB,CADU,CACiB;;MAC3BC,OAAO,CAACC,GAAR,CAAYH,MAAZ;MAEAP,KAAK,CAACW,IAAN,CAAW,2CAAX,EAAwD;QACtDH,KAAK,EAAE,KAAKA,KAD0C;QAEtDI,KAAK,EAAE,KAAKA;MAF0C,CAAxD,EAIGC,IAJH,CAIQ,UAAUC,QAAV,EAAoB;QAAE;QAC1BL,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACC,IAArB;;QACA,IAAGD,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBR,KAAlB,IAA2BD,MAA9B,EAAqC;UACnCE,OAAO,CAACC,GAAR,CAAY,YAAZ;UACAO,QAAQ,CAACC,IAAT,GAAgB,wBAAhB;UAEAlB,KAAK,CAACW,IAAN,CAAW,4CAAX,EACA;YACEH,KAAK,EAAED;UADT,CADA,EAICM,IAJD,CAIM,UAASC,QAAT,EAAmB;YACvB;YACA;YACA;YACAb,KAAK,CAACkB,MAAN,CAAa,mBAAb,EAAkCL,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBP,KAArD;YACAP,KAAK,CAACkB,MAAN,CAAa,mBAAb,EAAkCL,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBH,KAArD;YACAX,KAAK,CAACkB,MAAN,CAAa,qBAAb,EAAoCL,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBK,OAAvD;YACAX,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCT,KAAK,CAACoB,KAAN,CAAYC,SAAZ,CAAsBF,OAAtD;UACD,CAZD;QAaF,CAjBA,MAkBI;UACFG,KAAK,CAAC,mBAAD,CAAL;QACF,CAtBwB,CAuBxB;;;QACAd,OAAO,CAACC,GAAR,CAAa,WAAUT,KAAK,CAACoB,KAAN,CAAYC,SAAZ,CAAsBd,KAAM,EAAnD,EAxBwB,CAwB8B;MACvD,CA7BH,EA6BKgB,KA7BL,CA6BW,UAAUC,KAAV,EAAiB;QAAE;QAC1BhB,OAAO,CAACC,GAAR,CAAYe,KAAZ;MACD,CA/BH;IAgCF;;EArCO;AADI,CAAf","names":["axios","store","defaults","headers","common","methods","sendPost","userId","memID","console","log","post","memPW","then","response","data","mem","location","href","commit","memName","state","loginUser","alert","catch","error"],"sourceRoot":"","sources":["/Users/azabell/Desktop/SIAT_FinalProject/FrontEnd/new_jiwoo/src/views/LoginView.vue"],"sourcesContent":["<template>\n    <div>\n    <h1>Login 페이지입니다.</h1>\n    \n    <form @submit.prevent=\"sendPost\">  <!-- sendPost 함수 실행 -->\n        <label for=\"memID\">ID : <input id=\"memID\" v-model=\"memID\" type=\"text\"></label><br><br>\n        <label for=\"memPW\">PW : <input id=\"memPW\" v-model=\"memPW\" type=\"password\"></label><br><br>\n        <button>Send</button><br>\n        <!-- @click=\"onClickRedirect()\" 로그인 성공시 화면 이동 -->\n        {{ memID }}\n    </form>\n    </div>\n</template>\n<script>\nimport axios from 'axios'\nimport store from '@/store/index'\n\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*'\n\nexport default {\n  methods: {\n    sendPost () {\n      const userId = this.memID; //변수 선언 이 값을 그대로 쓰겠다. 자스 내에선 this 선언 부분이 다를 수있음. 당분간 이게 좀 안전할 듯\n      console.log(userId);\n\n      axios.post('http://192.168.219.160:9292/mem/loginProc', {\n        memID: this.memID,\n        memPW: this.memPW\n      })\n        .then(function (response) { //될떄 실행하는 함수\n          console.log(response.data)\n          if(response.data.mem.memID == userId){\n            console.log(\"ID가 일치합니다.\")\n            location.href = \"http://localhost:8080/\"\n            \n            axios.post('http://192.168.219.160:9292/mem/memberInfo', \n            {\n              memID: userId\n            })\n            .then(function(response) {\n              // console.log(response.data)\n              // console.log('memPW : ',response.data.data.memPW)\n              // store.commit('updateloginUserID', userId) //로그인이 성공하는 과정에서 memID를 조회해서 정보를 가져오는건가?\n              store.commit('updateloginUserID', response.data.data.memID)\n              store.commit('updateloginUserPW', response.data.data.memPW)\n              store.commit('updateloginUserName', response.data.data.memName)\n              console.log('store에 있는 Name : ',store.state.loginUser.memName)\n            })\n          }\n          else{\n            alert('ID 혹은 비밀번호가 틀렸습니다')\n          }\n          //store.commit('updateloginUserID',this.memID)\n          console.log(`login : ${store.state.loginUser.memID}`) //store에 있는 ID 값 체크\n        }).catch(function (error) { // 뭔가 실패할때 쓰는 함수\n          console.log(error);\n        })\n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}