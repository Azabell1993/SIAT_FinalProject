{"ast":null,"code":"export default {\n  name: 'SignupForm',\n\n  data() {\n    return {\n      memID: '',\n      memPW: '',\n      memPWCheck: '',\n      memName: '',\n      memAddr: '',\n      memPhone: '',\n      memEmail: '',\n      memBirth: ''\n    };\n  },\n\n  methods: {\n    SignupForm() {\n      console.log(\"SignView Test\");\n      axios.post('http://192.168.0.81:8081/loginProc', {\n        memID: this.memID,\n        memPW: this.memPW,\n        memPWCheck: this.memPWCheck,\n        memName: this.memName,\n        memAddr: this.memAddr,\n        memPhone: this.memPhone,\n        memEmail: this.memEmail,\n        memBirth: this.memBirth\n      }).catch(function () {\n        console.log('failed');\n      });\n    }\n\n  }\n};\nconst btn = document.querySelector('#login_submit');\nconst userid_msg = document.querySelector('#userid_msg');\nconst login_frm = document.querySelector('#login_frm');\nconst userid = document.querySelector('#memID');\n\nasync function userid_check() {\n  let data = await axios.post(`http://192.168.0.81:8081/idCheckProc`, {\n    memID: this.memID\n  }); //AJAX id 값 가져와서 중복 아니면 true, 중복이면 false\n\n  console.log(data);\n  login_flag = data.data.login;\n\n  if (login_flag) {\n    userid_msg.innerHTML = '사용 가능한 아이디 입니다.';\n    userid_msg.style.color = 'green';\n  } else {\n    userid_msg.innerHTML = '중복된 아이디 입니다.';\n    userid_msg.style.color = 'red';\n  }\n} //userid.addEventListener('focusout',userid_check);   // 커서가 밖으로 갔을 때 저 함수를 실행시켜라","map":{"version":3,"mappings":"AA0BA,eAAe;EACbA,IAAI,EAAE,YADO;;EAEbC,IAAI,GAAG;IACL,OAAO;MACHC,KAAK,EAAC,EADH;MAEHC,KAAK,EAAC,EAFH;MAGHC,UAAU,EAAC,EAHR;MAIHC,OAAO,EAAC,EAJL;MAKHC,OAAO,EAAC,EALL;MAMHC,QAAQ,EAAC,EANN;MAOHC,QAAQ,EAAC,EAPN;MAQHC,QAAQ,EAAC;IARN,CAAP;EAUD,CAbY;;EAcbC,OAAO,EAAE;IACPC,UAAU,GAAG;MACXC,OAAO,CAACC,GAAR,CAAY,eAAZ;MACAC,KAAK,CAACC,IAAN,CAAW,oCAAX,EAAiD;QAC/Cb,KAAK,EAAE,KAAKA,KADmC;QAE/CC,KAAK,EAAE,KAAKA,KAFmC;QAG/CC,UAAU,EAAE,KAAKA,UAH8B;QAI/CC,OAAO,EAAE,KAAKA,OAJiC;QAK/CC,OAAO,EAAE,KAAKA,OALiC;QAM/CC,QAAQ,EAAE,KAAKA,QANgC;QAO/CC,QAAQ,EAAE,KAAKA,QAPgC;QAQ/CC,QAAQ,EAAE,KAAKA;MARgC,CAAjD,EASGO,KATH,CASS,YAAW;QAClBJ,OAAO,CAACC,GAAR,CAAY,QAAZ;MACD,CAXD;IAYF;;EAfO;AAdI,CAAf;AAiCA,MAAMI,GAAE,GAAIC,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CAAZ;AACA,MAAMC,UAAS,GAAIF,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAnB;AACA,MAAME,SAAQ,GAAIH,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAlB;AACA,MAAMG,MAAK,GAAIJ,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;;AAEA,eAAeI,YAAf,GAA8B;EAC5B,IAAItB,IAAG,GAAI,MAAMa,KAAK,CAACC,IAAN,CAAY,sCAAZ,EAAmD;IAClEb,KAAK,EAAE,KAAKA;EADsD,CAAnD,CAAjB,CAD4B,CAI5B;;EAEAU,OAAO,CAACC,GAAR,CAAYZ,IAAZ;EAEAuB,UAAS,GAAIvB,IAAI,CAACA,IAAL,CAAUwB,KAAvB;;EACA,IAAGD,UAAH,EAAc;IACdJ,UAAU,CAACM,SAAX,GAAuB,iBAAvB;IACAN,UAAU,CAACO,KAAX,CAAiBC,KAAjB,GAAyB,OAAzB;EACC,CAHD,MAGK;IACHR,UAAU,CAACM,SAAX,GAAuB,cAAvB;IACAN,UAAU,CAACO,KAAX,CAAiBC,KAAjB,GAAyB,KAAzB;EACA;AACF,C,CAEA","names":["name","data","memID","memPW","memPWCheck","memName","memAddr","memPhone","memEmail","memBirth","methods","SignupForm","console","log","axios","post","catch","btn","document","querySelector","userid_msg","login_frm","userid","userid_check","login_flag","login","innerHTML","style","color"],"sourceRoot":"","sources":["/Users/azabell/Desktop/SIAT_FinalProject/FrontEnd/new_jiwoo/src/views/SignView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n\t\t<form @submit.prevent=\"submitForm\" id=\"login_frm\" method=\"POST\">\n    <div>\n      <h1>Sign Up 페이지입니다.</h1>\n      </div>\n\n      <label for=\"memID\">아이디 : <input type=\"text\" id=\"memID\" v-model=\"memID\"><p id=\"userid_msg\"></p></label>\n      <br>\n      <label for=\"memPW\">비밀번호 : <input type=\"password\" id=\"memPW\" v-model=\"memPW\"></label><br>\n      <label for=\"memPWCheck\">비밀번호 확인 : <input type=\"password\" id=\"memPWCheck\" v-model=\"memPWCheck\"></label><br>\n      <label for=\"memName\">이름 : <input type=\"text\" id=\"memName\" v-model=\"memName\"></label><br>\n      <label for=\"memAddr\">주소 : <input type=\"text\" id=\"memAddr\" v-model=\"memAddr\"></label><br>\n      <label for=\"memPhone\">전화번호 : <input type=\"text\" id=\"memPhone\" v-model=\"memPhone\"></label><br>\n      <label for=\"memEmail\">이메일 : <input type=\"email\" id=\"memEmail\" v-model=\"memEmail\"></label>\n      <input type=\"text\" class=\"form-control\" id=\"email\" v-model=\"email\" placeholder=\"Enter email\" @blur=\"checkDuplicate\" />\n\n      <br>\n      <label for=\"memBirth\">생년월일 : <input type=\"date\" id=\"memBirth\" v-model=\"memBirth\"></label><br>\n      <input type=\"reset\" value=\"초기화\">\n      <input type=\"submit\" id=\"login_submit\" value=\"가입\">\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SignupForm',\n  data() {\n    return {\n        memID:'',\n        memPW:'',\n        memPWCheck:'',\n        memName:'',\n        memAddr:'',\n        memPhone:'',\n        memEmail:'',\n        memBirth:'',\n    };\n  },\n  methods: {\n    SignupForm() {\n      console.log(\"SignView Test\")\n      axios.post('http://192.168.0.81:8081/loginProc', {\n        memID: this.memID,\n        memPW: this.memPW,\n        memPWCheck: this.memPWCheck,\n        memName: this.memName,\n        memAddr: this.memAddr,\n        memPhone: this.memPhone,\n        memEmail: this.memEmail,\n        memBirth: this.memBirth\n      }).catch(function() {\n        console.log('failed')\n      })\n    }\n  }\n}\n\nconst btn = document.querySelector('#login_submit');\nconst userid_msg = document.querySelector('#userid_msg');\nconst login_frm = document.querySelector('#login_frm');\nconst userid = document.querySelector('#memID');\n\nasync function userid_check() {\n  let data = await axios.post(`http://192.168.0.81:8081/idCheckProc`, {\n    memID: this.memID\n  })\n  //AJAX id 값 가져와서 중복 아니면 true, 중복이면 false\n        \n  console.log(data);\n        \n  login_flag = data.data.login;\n  if(login_flag){\n  userid_msg.innerHTML = '사용 가능한 아이디 입니다.';\n  userid_msg.style.color = 'green';\n  }else{\n    userid_msg.innerHTML = '중복된 아이디 입니다.';\n    userid_msg.style.color = 'red';\n    }\n  }\n\n  //userid.addEventListener('focusout',userid_check);   // 커서가 밖으로 갔을 때 저 함수를 실행시켜라\n\n\n</script>\n"]},"metadata":{},"sourceType":"module"}