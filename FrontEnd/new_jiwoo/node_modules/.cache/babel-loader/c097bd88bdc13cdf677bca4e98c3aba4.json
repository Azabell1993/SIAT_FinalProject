{"ast":null,"code":"import axios from 'axios';\nimport store from '@/store/index';\nimport MypageCategoryVue from '@/components/MypageCategory.vue';\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\nexport default {\n  components: {\n    MypageCategoryVue\n  },\n\n  data() {\n    return {\n      deleteup: {\n        memPW: null,\n        memID: store.state.loginUser.memID\n      },\n      passwordValidFlag: true,\n      asswordCheck: ''\n    }; // idValidFlag: true,\n  },\n\n  methods: {\n    /* 비밀번호 정규식 */\n    passwordValid() {\n      if (/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,16}$/.test(this.modifyup.memPW)) {\n        this.passwordValidFlag = true;\n      } else {\n        this.passwordValidFlag = false;\n      }\n    },\n\n    passwordCheckValid() {\n      if (this.modifyup.memPW === this.passwordCheck) {\n        this.passwordCheckFlag = true;\n      } else {\n        this.passwordCheckFlag = false;\n      }\n    },\n\n    /* pw check */\n    checkPw() {\n      if (!this.passwordValidFlag) {\n        alert(\"사용할 수 없는 조합입니다.\\n패스워드 설정안내를 확인해 주세요.\");\n        return false;\n      } else if (store.state.loginUser.memPW === this.modifyup.memPW) {\n        alert(\"이전 비밀번호와 같은 값은 사용할 수 없습니다.\");\n        return false;\n      } else {\n        alert(\"사용 가능한 비밀번호 입니다.\");\n        return true;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACAF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,6BAA9B,IAA+D,GAA/D;AAEA,eAAe;EACbC,UAAU,EAAE;IACVJ;EADU,CADC;;EAKbK,IAAI,GAAG;IACL,OAAO;MACLC,QAAO,EAAI;QACTC,KAAI,EAAI,IADC;QAETC,KAAI,EAAIT,KAAK,CAACU,KAAN,CAAYC,SAAZ,CAAsBF;MAFrB,CADN;MAKLG,iBAAiB,EAAE,IALd;MAMLC,YAAY,EAAE;IANT,CAAP,CADK,CASL;EAGD,CAjBY;;EAmBbC,OAAM,EAAI;IAGR;IACAC,aAAY,GAAK;MACf,IAAI,6CAA6CC,IAA7C,CAAkD,KAAKC,QAAL,CAAcT,KAAhE,CAAJ,EAA4E;QAC1E,KAAKI,iBAAL,GAAyB,IAAzB;MACF,CAFA,MAEO;QACL,KAAKA,iBAAL,GAAyB,KAAzB;MACF;IACD,CAVO;;IAYPM,kBAAiB,GAAK;MACrB,IAAI,KAAKD,QAAL,CAAcT,KAAd,KAAwB,KAAKW,aAAjC,EAAgD;QAC9C,KAAKC,iBAAL,GAAyB,IAAzB;MACF,CAFA,MAEO;QACL,KAAKA,iBAAL,GAAyB,KAAzB;MACF;IACD,CAlBO;;IAoBR;IACAC,OAAO,GAAG;MACR,IAAG,CAAE,KAAKT,iBAAV,EAA8B;QAC5BU,KAAK,CAAC,sCAAD,CAAL;QACA,OAAO,KAAP;MACF,CAHA,MAGO,IAAGtB,KAAK,CAACU,KAAN,CAAYC,SAAZ,CAAsBH,KAAtB,KAAgC,KAAKS,QAAL,CAAcT,KAAjD,EAAwD;QAC7Dc,KAAK,CAAC,4BAAD,CAAL;QACA,OAAO,KAAP;MACF,CAHO,MAGA;QACLA,KAAK,CAAC,kBAAD,CAAL;QACA,OAAO,IAAP;MACF;IACD;;EAhCO;AAnBG,CAAf","names":["axios","store","MypageCategoryVue","defaults","headers","common","components","data","deleteup","memPW","memID","state","loginUser","passwordValidFlag","asswordCheck","methods","passwordValid","test","modifyup","passwordCheckValid","passwordCheck","passwordCheckFlag","checkPw","alert"],"sourceRoot":"","sources":["/Users/azabell/Desktop/SIAT_FinalProject/FrontEnd/new_jiwoo/src/views/mypage/MemberResign.vue"],"sourcesContent":["<template>\n<MypageCategoryVue></MypageCategoryVue>\n  <h1>회원 탈퇴 페이지</h1>\n\n  <form @submit.prevent=\"sendPost\">  <!-- sendPost 함수 실행 -->\n        <label for=\"memID\">ID : <input id=\"memID\" v-model=\"deleteup.memID\" type=\"text\"></label><br><br>\n       <label for=\"memPW\">비밀번호 : \n        <input type=\"password\" id=\"memPW\" v-model=\"deleteup.memPW\" @blur=\"passwordValid\" ref=\"memPWck\"></label><br>\n        <label for=\"memPWCheck\">비밀번호 확인 : <input type=\"password\" id=\"memPWCheck\" v-model=\"deleteup.memPWCheck\" maxlength=\"16\" @blur=\"passwordCheckValid\" ref=\"modifyup.memPW\"></label><br>\n        <div v-if=\"!passwordValidFlag\">유효하지 않은 비밀번호 입니다.</div>\n        <input type=\"reset\" value=\"초기화\">\n        <input type=\"submit\" id=\"signout_submit\" value=\"회원 탈퇴\">\n    </form>\n</template>\n\n<script>\nimport axios from 'axios'\nimport store from '@/store/index'\nimport MypageCategoryVue from '@/components/MypageCategory.vue'\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*'\n\nexport default {\n  components: {\n    MypageCategoryVue\n  },\n\n  data() {\n    return {\n      deleteup : {\n        memPW : null,\n        memID : store.state.loginUser.memID,\n      },\n      passwordValidFlag: true,\n      asswordCheck: '',\n    };          \n    // idValidFlag: true,\n\n    \n  },\n\n  methods : {\n\n\n    /* 비밀번호 정규식 */\n    passwordValid () {\n      if (/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,16}$/.test(this.modifyup.memPW)) {\n        this.passwordValidFlag = true\n      } else {\n        this.passwordValidFlag = false\n      }\n    },\n\n     passwordCheckValid () {\n      if (this.modifyup.memPW === this.passwordCheck) {\n        this.passwordCheckFlag = true\n      } else {\n        this.passwordCheckFlag = false\n      }\n    },\n\n    /* pw check */\n    checkPw() {\n      if(!(this.passwordValidFlag)) {\t\t\n        alert(\"사용할 수 없는 조합입니다.\\n패스워드 설정안내를 확인해 주세요.\");\t\t\n        return false;\n      } else if(store.state.loginUser.memPW === this.modifyup.memPW) {\n        alert(\"이전 비밀번호와 같은 값은 사용할 수 없습니다.\");\t\t\n        return false;\n      } else {\n        alert(\"사용 가능한 비밀번호 입니다.\");\n        return true;\n      }\n    },\n\n  }\n\n\n\n}\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}