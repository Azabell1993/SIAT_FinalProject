{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Sign Up 페이지입니다.\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  for: \"memID\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"아이디 : \");\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", {\n  id: \"userid_msg\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = {\n  for: \"memPW\"\n};\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"비밀번호 : \");\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_10 = {\n  for: \"memPWCheck\"\n};\n\nconst _hoisted_11 = /*#__PURE__*/_createTextVNode(\"비밀번호 확인 : \");\n\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_13 = {\n  for: \"memName\"\n};\n\nconst _hoisted_14 = /*#__PURE__*/_createTextVNode(\"이름 : \");\n\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_16 = {\n  for: \"memAddr\"\n};\n\nconst _hoisted_17 = /*#__PURE__*/_createTextVNode(\"주소 : \");\n\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_19 = {\n  for: \"memPhone\"\n};\n\nconst _hoisted_20 = /*#__PURE__*/_createTextVNode(\"전화번호 : \");\n\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_22 = {\n  for: \"memEmail\"\n};\n\nconst _hoisted_23 = /*#__PURE__*/_createTextVNode(\"이메일 : \");\n\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_25 = {\n  for: \"memBirth\"\n};\n\nconst _hoisted_26 = /*#__PURE__*/_createTextVNode(\"생년월일 : \");\n\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"reset\",\n  value: \"초기화\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_29 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"submit\",\n  id: \"login_submit\",\n  value: \"가입\"\n}, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[10] || (_cache[10] = _withModifiers((...args) => _ctx.submitForm && _ctx.submitForm(...args), [\"prevent\"]))\n  }, [_hoisted_2, _createElementVNode(\"label\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"memID\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.memID = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.memID]]), _hoisted_5]), _hoisted_6, _createElementVNode(\"label\", _hoisted_7, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"memPW\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.memPW = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.memPW]])]), _hoisted_9, _createElementVNode(\"label\", _hoisted_10, [_hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"memPWCheck\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.memPWCheck = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.memPWCheck]])]), _hoisted_12, _createElementVNode(\"label\", _hoisted_13, [_hoisted_14, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"memName\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.memName = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.memName]])]), _hoisted_15, _createElementVNode(\"label\", _hoisted_16, [_hoisted_17, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"memAddr\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.memAddr = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.memAddr]])]), _hoisted_18, _createElementVNode(\"label\", _hoisted_19, [_hoisted_20, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"memPhone\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.memPhone = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.memPhone]])]), _hoisted_21, _createElementVNode(\"label\", _hoisted_22, [_hoisted_23, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"memEmail\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.memEmail = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.memEmail]])]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.email = $event),\n    placeholder: \"Enter email\",\n    onBlur: _cache[8] || (_cache[8] = (...args) => _ctx.checkDuplicate && _ctx.checkDuplicate(...args))\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, _ctx.email]]), _hoisted_24, _createElementVNode(\"label\", _hoisted_25, [_hoisted_26, _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"memBirth\",\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.memBirth = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.memBirth]])]), _hoisted_27, _hoisted_28, _hoisted_29], 32\n  /* HYDRATE_EVENTS */\n  )]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","for","id","type","value","_createElementBlock","onSubmit","_ctx","_hoisted_2","$data","$event","_hoisted_5","_hoisted_6","_hoisted_9","_hoisted_12","_hoisted_15","_hoisted_18","_hoisted_21","placeholder","onBlur","_hoisted_24","_hoisted_27","_hoisted_28","_hoisted_29"],"sourceRoot":"","sources":["/Users/azabell/Desktop/SIAT_FinalProject/FrontEnd/new_jiwoo/src/views/SignView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n\t\t<form @submit.prevent=\"submitForm\">\n    <div>\n      <h1>Sign Up 페이지입니다.</h1>\n      </div>\n\n      <label for=\"memID\">아이디 : <input type=\"text\" id=\"memID\" v-model=\"memID\"><p id=\"userid_msg\"></p></label>\n      <br>\n      <label for=\"memPW\">비밀번호 : <input type=\"password\" id=\"memPW\" v-model=\"memPW\"></label><br>\n      <label for=\"memPWCheck\">비밀번호 확인 : <input type=\"password\" id=\"memPWCheck\" v-model=\"memPWCheck\"></label><br>\n      <label for=\"memName\">이름 : <input type=\"text\" id=\"memName\" v-model=\"memName\"></label><br>\n      <label for=\"memAddr\">주소 : <input type=\"text\" id=\"memAddr\" v-model=\"memAddr\"></label><br>\n      <label for=\"memPhone\">전화번호 : <input type=\"text\" id=\"memPhone\" v-model=\"memPhone\"></label><br>\n      <label for=\"memEmail\">이메일 : <input type=\"email\" id=\"memEmail\" v-model=\"memEmail\"></label>\n      <input type=\"text\" class=\"form-control\" id=\"email\" v-model=\"email\" placeholder=\"Enter email\" @blur=\"checkDuplicate\" />\n\n      <br>\n      <label for=\"memBirth\">생년월일 : <input type=\"date\" id=\"memBirth\" v-model=\"memBirth\"></label><br>\n      <input type=\"reset\" value=\"초기화\">\n      <input type=\"submit\" id=\"login_submit\" value=\"가입\">\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SignupForm',\n  data() {\n    return {\n        memID:'',\n        memPW:'',\n        memPWCheck:'',\n        memName:'',\n        memAddr:'',\n        memPhone:'',\n        memEmail:'',\n        memBirth:'',\n    };\n  },\n  methods: {\n    SignupForm() {\n      console.log(\"SignView Test\")\n      axios.post('http://192.168.0.81:8081/loginProc', {\n        memID: this.memID,\n        memPW: this.memPW,\n        memPWCheck: this.memPWCheck,\n        memName: this.memName,\n        memAddr: this.memAddr,\n        memPhone: this.memPhone,\n        memEmail: this.memEmail,\n        memBirth: this.memBirth\n      }).catch(function() {\n        console.log('failed')\n      })\n    }\n  }\n}\n\nconst btn = document.querySelector('#login_submit');\n\nasync function userid_check() {\n  let data = await axios.get(`http://localhost:3000/user/userid_check?userid=${userid.value}`);\n  //AJAX id 값 가져와서 중복 아니면 true, 중복이면 false\n        \n  console.log(data);\n        \n  login_flag = data.data.login;\n  if(login_flag){\n  userid_msg.innerHTML = '사용 가능한 아이디 입니다.';\n  userid_msg.style.color = 'green';\n  }else{\n    userid_msg.innerHTML = '중복된 아이디 입니다.';\n    userid_msg.style.color = 'red';\n    }\n  }\n\n  userid.addEventListener('focusout',userid_check);   // 커서가 밖으로 갔을 때 저 함수를 실행시켜라\n\n\n</script>\n"]},"metadata":{},"sourceType":"module"}