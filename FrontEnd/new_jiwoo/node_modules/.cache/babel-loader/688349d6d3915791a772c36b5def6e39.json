{"ast":null,"code":"import axios from 'axios';\nimport storeUser from '@/store/index';\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*'; // import { response } from 'express'\n\nconst url = 'http://192.168.219.162:9292';\nexport default {\n  data() {\n    return {\n      product: {\n        proName: this.proName,\n        proPrice: this.proPrice,\n        proCount: this.proCount\n      },\n      mycartInfo: [],\n      arr: ''\n    };\n  },\n\n  created() {\n    const vm = this;\n    axios.post(url + '/cart/cartInfo', {\n      //addCart, cartInfo\n      memID: storeUser.state.loginUser.memID\n    }).then(function (response) {\n      // console.log(response.data.data)\n      vm.mycartInfo = response.data.data;\n    });\n  },\n\n  methods: {\n    deleteCartProc(index) {\n      var vm = this; // console.log(storeUser.state.loginUser.memID);\n      // console.log(vm.mycartInfo[index].proCode.proCode);\n\n      axios.post('http://192.168.219.162:9292/cart/deleteCart', {\n        memID: storeUser.state.loginUser.memID,\n        proCode: vm.mycartInfo[index].proCode.proCode\n      }).then(function (response) {\n        console.log(response.data);\n        alert(\"삭제 완료\");\n        location.reload();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n\n    buycartProc() {\n      axios.post('http://192.168.219.162:9292/cart/buyCart', {\n        memID: storeUser.state.loginUser.memID\n      }).then(function (response) {\n        console.log(response.data);\n        alert(\"구매 완료\");\n        location.reload();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAqCA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,6BAA9B,IAA+D,GAA/D,C,CAEA;;AAEA,MAAMC,GAAE,GAAI,6BAAZ;AAEA,eAAe;EAEbC,IAAG,GAAK;IACN,OAAO;MACLC,OAAO,EAAE;QACPC,OAAO,EAAE,KAAKA,OADP;QAEPC,QAAQ,EAAE,KAAKA,QAFR;QAGPC,QAAQ,EAAE,KAAKA;MAHR,CADJ;MAOLC,UAAS,EAAI,EAPR;MAQLC,GAAG,EAAE;IARA,CAAP;EAUD,CAbY;;EAebC,OAAM,GAAK;IACT,MAAMC,EAAC,GAAI,IAAX;IAEAd,KAAK,CAACe,IAAN,CAAWV,GAAG,GAAC,gBAAf,EAAiC;MAC7B;MACAW,KAAI,EAAIf,SAAS,CAACgB,KAAV,CAAgBC,SAAhB,CAA0BF;IAFL,CAAjC,EAIGG,IAJH,CAIQ,UAASC,QAAT,EAAmB;MACvB;MACAN,EAAE,CAACH,UAAH,GAAgBS,QAAQ,CAACd,IAAT,CAAcA,IAA9B;IACD,CAPH;EAQD,CA1BY;;EA6Bbe,OAAM,EAAI;IAERC,cAAa,CAAGC,KAAH,EAAU;MACrB,IAAIT,EAAC,GAAI,IAAT,CADqB,CAErB;MACA;;MAEAd,KAAK,CAACe,IAAN,CAAW,6CAAX,EAA0D;QAExDC,KAAI,EAAIf,SAAS,CAACgB,KAAV,CAAgBC,SAAhB,CAA0BF,KAFsB;QAGxDQ,OAAM,EAAIV,EAAE,CAACH,UAAH,CAAcY,KAAd,EAAqBC,OAArB,CAA6BA;MAHiB,CAA1D,EAKGL,IALH,CAKQ,UAASC,QAAT,EAAmB;QACzBK,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACd,IAArB;QACAqB,KAAK,CAAC,OAAD,CAAL;QACAC,QAAQ,CAACC,MAAT;MACD,CATD,EASGC,KATH,CASS,UAAUC,KAAV,EAAiB;QACpBN,OAAO,CAACC,GAAR,CAAYK,KAAZ;MACL,CAXD;IAYD,CAnBO;;IAqBRC,WAAU,GAAK;MACbhC,KAAK,CAACe,IAAN,CAAW,0CAAX,EAAuD;QAErDC,KAAI,EAAIf,SAAS,CAACgB,KAAV,CAAgBC,SAAhB,CAA0BF;MAFmB,CAAvD,EAIGG,IAJH,CAIQ,UAASC,QAAT,EAAmB;QACzBK,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACd,IAArB;QACEqB,KAAK,CAAC,OAAD,CAAL;QACAC,QAAQ,CAACC,MAAT;MACH,CARD,EAQGC,KARH,CAQS,UAAUC,KAAV,EAAiB;QACpBN,OAAO,CAACC,GAAR,CAAYK,KAAZ;MACL,CAVD;IAWF;;EAjCQ;AA7BG,CAAf","names":["axios","storeUser","defaults","headers","common","url","data","product","proName","proPrice","proCount","mycartInfo","arr","created","vm","post","memID","state","loginUser","then","response","methods","deleteCartProc","index","proCode","console","log","alert","location","reload","catch","error","buycartProc"],"sourceRoot":"","sources":["/Users/azabell/Desktop/SIAT_FinalProject/FrontEnd/new_jiwoo/src/views/MyCart.vue"],"sourcesContent":["<template>\n  <h1>My Cart 입니다.</h1>\n\n    <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"col\">상품 번호</th>\n            <th scope=\"col\">상품명</th>\n            <th scope=\"col\">상품 가격</th>\n            <th scope=\"col\">상품 개수</th>\n            <th scope=\"col\">상품 삭제</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr v-for=\"(item, index) in mycartInfo\" :key=\"item\">\n            <th scope=\"row\" > {{ index + 1 }} </th>\n            <th scope=\"row\" > {{ item.proCode.proName }} </th>\n            <th  scope=\"row\"> {{ item.proCode.proPrice }} </th>\n            <th  scope=\"row\"> {{ item.proCode.proCount }} </th>\n            <th scope=\"row\" > \n              <div v-bind:key=\"item\" v-if=\"(index) in mycartInfo\">\n                <button v-on:click=\"deleteCartProc(index)\" > 삭제 </button>\n              </div>\n            </th>\n          </tr>\n        </tbody>\n\n       \n      </table>\n\n   <button v-on:click=\"buycartProc()\" > 구매하기 </button>\n              \n\n</template>\n\n<script>\nimport axios from 'axios'\nimport storeUser from '@/store/index'\n\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*'\n\n// import { response } from 'express'\n\nconst url = 'http://192.168.219.162:9292'\n\nexport default {\n\n  data () {\n    return {\n      product: {\n        proName: this.proName,\n        proPrice: this.proPrice,\n        proCount: this.proCount,\n\n      },\n      mycartInfo : [],\n      arr: ''\n    }\n  },\n\n  created () {\n    const vm = this\n\n    axios.post(url+'/cart/cartInfo', {\n        //addCart, cartInfo\n        memID : storeUser.state.loginUser.memID,\n      })\n      .then(function(response) {\n        // console.log(response.data.data)\n        vm.mycartInfo = response.data.data\n      })\n  },\n\n \n  methods : {\n\n    deleteCartProc (index) {\n      var vm = this\n      // console.log(storeUser.state.loginUser.memID);\n      // console.log(vm.mycartInfo[index].proCode.proCode);\n\n      axios.post('http://192.168.219.162:9292/cart/deleteCart', {\n\n        memID : storeUser.state.loginUser.memID,\n        proCode : vm.mycartInfo[index].proCode.proCode  \n\n      }).then(function(response) {\n        console.log(response.data);\n        alert(\"삭제 완료\");\n        location.reload();\n      }).catch(function (error) {\n            console.log(error)\n      })\n    },\n\n    buycartProc () {\n      axios.post('http://192.168.219.162:9292/cart/buyCart', {\n\n        memID : storeUser.state.loginUser.memID,\n\n      }).then(function(response) {\n        console.log(response.data);\n          alert(\"구매 완료\");\n          location.reload();\n      }).catch(function (error) {\n            console.log(error)\n      })\n    }\n\n  }\n}\n\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}