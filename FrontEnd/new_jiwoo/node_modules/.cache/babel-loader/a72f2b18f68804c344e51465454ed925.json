{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, Fragment as _Fragment } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"회원 탈퇴 페이지\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  for: \"memID\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"ID : \");\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = {\n  for: \"memPW\"\n};\n\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\"비밀번호 : \");\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_11 = {\n  for: \"memPWCheck\"\n};\n\nconst _hoisted_12 = /*#__PURE__*/_createTextVNode(\"비밀번호 확인 : \");\n\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_14 = {\n  key: 0\n};\n\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"reset\",\n  value: \"초기화\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"submit\",\n  id: \"signout_submit\",\n  value: \"회원 탈퇴\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_MypageCategoryVue = _resolveComponent(\"MypageCategoryVue\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_MypageCategoryVue), _hoisted_1, _hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.deleteupProc && $options.deleteupProc(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" sendPost 함수 실행 \"), _hoisted_3, _createElementVNode(\"label\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    id: \"memID\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.deleteup.memID = $event),\n    type: \"text\",\n    readonly: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.deleteup.memID]])]), _hoisted_6, _hoisted_7, _createElementVNode(\"label\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"memPW\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.deleteup.memPW = $event),\n    onBlur: _cache[2] || (_cache[2] = (...args) => $options.passwordValid && $options.passwordValid(...args)),\n    ref: \"memPWck\"\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, $data.deleteup.memPW]])]), _hoisted_10, _createElementVNode(\"label\", _hoisted_11, [_hoisted_12, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"memPWCheck\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.deleteup.memPWCheck = $event),\n    maxlength: \"16\",\n    onBlur: _cache[4] || (_cache[4] = (...args) => $options.passwordCheckValid && $options.passwordCheckValid(...args)),\n    ref: \"modifyup.memPW\"\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, $data.deleteup.memPWCheck]])]), _hoisted_13, !$data.passwordValidFlag ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, \"유효하지 않은 비밀번호 입니다.\")) : _createCommentVNode(\"v-if\", true), _hoisted_15, _hoisted_16, _hoisted_17, _hoisted_18], 32\n  /* HYDRATE_EVENTS */\n  )], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAEAA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gCACEA,oBAAkB,IAAlB,EAAkB,IAAlB,EAAI,WAAJ,EAAa;AAAA;AAAb;;gCAGAA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;EACaC,GAAG,EAAC;;;iDAAQ;;gCAA6ED,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gCAAIA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;EAC9FC,GAAG,EAAC;;;iDAAQ;;iCACsFD,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;EACjGC,GAAG,EAAC;;;kDAAa;;iCAAsJD,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;;;;iCACxHA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;iCAEtDA,oBAAgC,OAAhC,EAAgC;EAAzBE,IAAI,EAAC,OAAoB;EAAZC,KAAK,EAAC;AAAM,CAAhC;;AAAA;;iCACAH,oBAAuD,OAAvD,EAAuD;EAAhDE,IAAI,EAAC,QAA2C;EAAlCE,EAAE,EAAC,gBAA+B;EAAdD,KAAK,EAAC;AAAQ,CAAvD;;AAAA;;iCACRH,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;;;6DAdAK,aAAuCC,4BAAvC,GACAC,YACEC,YAEAR,oBAWS,MAXT,EAWS;IAXFS,QAAM,wDAAUC,uDAAV,EAAsB,WAAtB;EAWJ,CAXT,GAAuCC,yCACvCC,YACMZ,oBAAgG,OAAhG,cAAgG,6BAAxEA,oBAAgE,OAAhE,EAAgE;IAAzDI,EAAE,EAAC,OAAsD;+DAArCS,eAASC,QAAKC,OAAuB;IAArBb,IAAI,EAAC,MAAgB;IAATc,QAAQ,EAAR;EAAS,CAAhE;;EAAA,kBAA2BH,eAASC,QAAoC,CAAhG,GAAgGG,YAAIC,YACrGlB,oBACyG,OADzG,cACyG,6BAAvGA,oBAA+F,OAA/F,EAA+F;IAAxFE,IAAI,EAAC,UAAmF;IAAxEE,EAAE,EAAC,OAAqE;+DAApDS,eAASM,QAAKJ,OAAsC;IAAnCK,MAAI,yCAAEV,yDAAF,CAA+B;IAAdW,GAAG,EAAC;EAAU,CAA/F;;EAAA,kBAA2CR,eAASM,QAAmD,CADzG,GACyGG,aACxGtB,oBAA8K,OAA9K,eAA8K,8BAA5IA,oBAAoI,OAApI,EAAoI;IAA7HE,IAAI,EAAC,UAAwH;IAA7GE,EAAE,EAAC,YAA0G;+DAApFS,eAASU,aAAUR,OAAiE;IAA/DS,SAAS,EAAC,IAAqD;IAA/CJ,MAAI,yCAAEV,mEAAF,CAA2C;IAArBW,GAAG,EAAC;EAAiB,CAApI;;EAAA,kBAAgDR,eAASU,aAAmF,CAA9K,GAA8KE,cAClKZ,yCAAZa,oBAAsD,KAAtD,EAAsDC,WAAtD,EAA+B,mBAA/B,wCAAsDC,aAEtDC,aACAC,aACRC,YAVE;;EAAA","names":["_createElementVNode","for","type","value","id","_createVNode","_component_MypageCategoryVue","_hoisted_1","_hoisted_2","onSubmit","$options","_createCommentVNode","_hoisted_3","$data","memID","$event","readonly","_hoisted_6","_hoisted_7","memPW","onBlur","ref","_hoisted_10","memPWCheck","maxlength","_hoisted_13","_createElementBlock","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18"],"sourceRoot":"","sources":["/Users/azabell/Desktop/SIAT_FinalProject/FrontEnd/new_jiwoo/src/views/mypage/MemberResign.vue"],"sourcesContent":["<template>\n<MypageCategoryVue></MypageCategoryVue>\n<hr>\n  <h1>회원 탈퇴 페이지</h1>\n\n  <form @submit.prevent=\"deleteupProc\">  <!-- sendPost 함수 실행 -->\n  <hr>\n        <label for=\"memID\">ID : <input id=\"memID\" v-model=\"deleteup.memID\" type=\"text\" readonly></label><br><br>\n       <label for=\"memPW\">비밀번호 : \n         <input type=\"password\" id=\"memPW\" v-model=\"deleteup.memPW\" @blur=\"passwordValid\" ref=\"memPWck\"></label><br>\n        <label for=\"memPWCheck\">비밀번호 확인 : <input type=\"password\" id=\"memPWCheck\" v-model=\"deleteup.memPWCheck\" maxlength=\"16\" @blur=\"passwordCheckValid\" ref=\"modifyup.memPW\"></label><br>\n        <div v-if=\"!passwordValidFlag\">유효하지 않은 비밀번호 입니다.</div><hr>\n\n        <input type=\"reset\" value=\"초기화\">\n        <input type=\"submit\" id=\"signout_submit\" value=\"회원 탈퇴\">\n<hr>\n    </form>\n</template>\n\n<script>\nimport axios from 'axios'\nimport store from '@/store/index'\nimport MypageCategoryVue from '@/components/MypageCategory.vue'\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*'\n\nexport default {\n  components: {\n    MypageCategoryVue\n  },\n\n  data() {\n    return {\n      deleteup : {\n        memID : store.state.loginUser.memID,\n        memPW : null,\n        memPWCheck : null,\n        memName: store.state.loginUser.memName,\n        memAddr: store.state.loginUser.memAddr,\n        memPhone:store.state.loginUser.memPhone,\n        memEmail :store.state.loginUser.memEmail,\n        memBirth: store.state.loginUser.memBirth\n      },\n      passwordValidFlag: true,\n      asswordCheck: '',\n    };          \n  },\n\n  methods : {\n\n\n    /* 비밀번호 정규식 */\n    passwordValid () {\n      if (store.state.loginUser.memPW === this.deleteup.memPW) {\n        this.passwordValidFlag = true\n      } else {\n        this.passwordValidFlag = false\n      }\n    },\n\n     passwordCheckValid () {\n      if (this.deleteup.memPW === this.deleteup.memPWCheck) {\n        this.passwordCheckFlag = true\n      } else {\n        alert(\"두 비밀번호가 같아야합니다.\");\n        this.passwordCheckFlag = false\n      }\n    },\n\n    /* pw check */\n    checkPw() {\n      if(!(store.state.loginUser.memPW)) {\t\t\n        alert(\"다시 입력해주세요.\");\t\t\n        return false;\n      } else {\n        //alert(\"맞게 입력하셨습니다.\");\n        return true;\n      }\n    },\n\n\n    /* 회원가입 정보 전체 넘기기 */\n    deleteupProc() {    \n\n      // console.log('ID test')\n      \n      if(!this.deleteup.memPW) {\n        alert(\"비밀번호를 입력해주세요!\");\n        return false;\n      } else if(!this.deleteup.memPWCheck) {\n        alert(\"비밀번호 체크를 해주세요!\");\n        return false;\n      } else {\n        axios.post('http://192.168.0.81:9292/mem/deleteProc', {          \n          memID: this.deleteup.memID,\n          memPW: this.deleteup.memPW,\n          memName: this.deleteup.memName,\n          memAddr: this.deleteup.memAddr,\n          memPhone: this.deleteup.memPhone,\n          memEmail: this.deleteup.memEmail,\n          memBirth : this.deleteup.memBirth\n        }) .then(function ( ) {\n            confirm('Are you ready?') \n            if(true) {\n              alert(\"회원 탈퇴 완료\");\n            } else {\n              alert(\"회원 탈퇴 취소\");\n            }\n        }).catch(function (error) {\n            console.log(error)\n        })\n\n      }\n\n    } // modifyupProc\n\n\n  }\n}\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}