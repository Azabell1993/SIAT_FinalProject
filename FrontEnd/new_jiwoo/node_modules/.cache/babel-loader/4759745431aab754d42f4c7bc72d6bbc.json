{"ast":null,"code":"require(\"core-js/modules/es.error.cause.js\");\n\n/*!\n  * Bootstrap popover.js v5.2.0 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('./util/index'), require('./tooltip')) : typeof define === 'function' && define.amd ? define(['./util/index', './tooltip'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Popover = factory(global.Index, global.Tooltip));\n})(this, function (index, Tooltip) {\n  'use strict';\n\n  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : {\n    default: e\n  };\n\n  const Tooltip__default = /*#__PURE__*/_interopDefaultLegacy(Tooltip);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.0): popover.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n\n  const NAME = 'popover';\n  const SELECTOR_TITLE = '.popover-header';\n  const SELECTOR_CONTENT = '.popover-body';\n  const Default = { ...Tooltip__default.default.Default,\n    content: '',\n    offset: [0, 8],\n    placement: 'right',\n    template: '<div class=\"popover\" role=\"tooltip\">' + '<div class=\"popover-arrow\"></div>' + '<h3 class=\"popover-header\"></h3>' + '<div class=\"popover-body\"></div>' + '</div>',\n    trigger: 'click'\n  };\n  const DefaultType = { ...Tooltip__default.default.DefaultType,\n    content: '(null|string|element|function)'\n  };\n  /**\n   * Class definition\n   */\n\n  class Popover extends Tooltip__default.default {\n    // Getters\n    static get Default() {\n      return Default;\n    }\n\n    static get DefaultType() {\n      return DefaultType;\n    }\n\n    static get NAME() {\n      return NAME;\n    } // Overrides\n\n\n    _isWithContent() {\n      return this._getTitle() || this._getContent();\n    } // Private\n\n\n    _getContentForTemplate() {\n      return {\n        [SELECTOR_TITLE]: this._getTitle(),\n        [SELECTOR_CONTENT]: this._getContent()\n      };\n    }\n\n    _getContent() {\n      return this._resolvePossibleFunction(this._config.content);\n    } // Static\n\n\n    static jQueryInterface(config) {\n      return this.each(function () {\n        const data = Popover.getOrCreateInstance(this, config);\n\n        if (typeof config !== 'string') {\n          return;\n        }\n\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`);\n        }\n\n        data[config]();\n      });\n    }\n\n  }\n  /**\n   * jQuery\n   */\n\n\n  index.defineJQueryPlugin(Popover);\n  return Popover;\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;EAAA;;;;;;;EAUA;;;;;EAIA,MAAMA,IAAI,GAAG,SAAb;EAEA,MAAMC,cAAc,GAAG,iBAAvB;EACA,MAAMC,gBAAgB,GAAG,eAAzB;EAEA,MAAMC,OAAO,GAAG,EACd,GAAGC,yBAAQD,OADG;IAEdE,OAAO,EAAE,EAFK;IAGdC,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAHM;IAIdC,SAAS,EAAE,OAJG;IAKdC,QAAQ,EAAE,yCACR,mCADQ,GAER,kCAFQ,GAGR,kCAHQ,GAIR,QATY;IAUdC,OAAO,EAAE;EAVK,CAAhB;EAaA,MAAMC,WAAW,GAAG,EAClB,GAAGN,yBAAQM,WADO;IAElBL,OAAO,EAAE;EAFS,CAApB;EAKA;;;;EAIA,MAAMM,OAAN,SAAsBP,wBAAtB,CAA8B;IAC5B;IACkB,WAAPD,OAAO,GAAG;MACnB,OAAOA,OAAP;IACD;;IAEqB,WAAXO,WAAW,GAAG;MACvB,OAAOA,WAAP;IACD;;IAEc,WAAJV,IAAI,GAAG;MAChB,OAAOA,IAAP;IAX0B;;;IAe5BY,cAAc,GAAG;MACf,OAAO,KAAKC,SAAL,MAAoB,KAAKC,WAAL,EAA3B;IAhB0B;;;IAoB5BC,sBAAsB,GAAG;MACvB,OAAO;QACL,CAACd,cAAD,GAAkB,KAAKY,SAAL,EADb;QAEL,CAACX,gBAAD,GAAoB,KAAKY,WAAL;MAFf,CAAP;IAID;;IAEDA,WAAW,GAAG;MACZ,OAAO,KAAKE,wBAAL,CAA8B,KAAKC,OAAL,CAAaZ,OAA3C,CAAP;IA5B0B;;;IAgCN,OAAfa,eAAe,CAACC,MAAD,EAAS;MAC7B,OAAO,KAAKC,IAAL,CAAU,YAAY;QAC3B,MAAMC,IAAI,GAAGV,OAAO,CAACW,mBAARX,CAA4B,IAA5BA,EAAkCQ,MAAlCR,CAAb;;QAEA,IAAI,OAAOQ,MAAP,KAAkB,QAAtB,EAAgC;UAC9B;QACD;;QAED,IAAI,OAAOE,IAAI,CAACF,MAAD,CAAX,KAAwB,WAA5B,EAAyC;UACvC,MAAM,IAAII,SAAJ,CAAkCJ,0BAAO,GAAzC,CAAN;QACD;;QAEDE,IAAI,CAACF,MAAD,CAAJE;MAXK,EAAP;IAaD;;EA9C2B;EAiD9B;;;;;EAIAG,yBAAmBb,OAAnBa","names":["NAME","SELECTOR_TITLE","SELECTOR_CONTENT","Default","Tooltip","content","offset","placement","template","trigger","DefaultType","Popover","_isWithContent","_getTitle","_getContent","_getContentForTemplate","_resolvePossibleFunction","_config","jQueryInterface","config","each","data","getOrCreateInstance","TypeError","defineJQueryPlugin"],"sources":["../src/popover.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.0): popover.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { defineJQueryPlugin } from './util/index'\nimport Tooltip from './tooltip'\n\n/**\n * Constants\n */\n\nconst NAME = 'popover'\n\nconst SELECTOR_TITLE = '.popover-header'\nconst SELECTOR_CONTENT = '.popover-body'\n\nconst Default = {\n  ...Tooltip.Default,\n  content: '',\n  offset: [0, 8],\n  placement: 'right',\n  template: '<div class=\"popover\" role=\"tooltip\">' +\n    '<div class=\"popover-arrow\"></div>' +\n    '<h3 class=\"popover-header\"></h3>' +\n    '<div class=\"popover-body\"></div>' +\n    '</div>',\n  trigger: 'click'\n}\n\nconst DefaultType = {\n  ...Tooltip.DefaultType,\n  content: '(null|string|element|function)'\n}\n\n/**\n * Class definition\n */\n\nclass Popover extends Tooltip {\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Overrides\n  _isWithContent() {\n    return this._getTitle() || this._getContent()\n  }\n\n  // Private\n  _getContentForTemplate() {\n    return {\n      [SELECTOR_TITLE]: this._getTitle(),\n      [SELECTOR_CONTENT]: this._getContent()\n    }\n  }\n\n  _getContent() {\n    return this._resolvePossibleFunction(this._config.content)\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Popover.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    })\n  }\n}\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Popover)\n\nexport default Popover\n"]},"metadata":{},"sourceType":"script"}