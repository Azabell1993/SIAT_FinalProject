{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Parser } from \"../Parser.js\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.js\"; // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\nexport class YearParser extends Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 130);\n\n    _defineProperty(this, \"incompatibleTokens\", ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']);\n  }\n\n  parse(dateString, token, match) {\n    var valueCallback = function (year) {\n      return {\n        year: year,\n        isTwoDigitYear: token === 'yy'\n      };\n    };\n\n    switch (token) {\n      case 'y':\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n\n      case 'yo':\n        return mapValue(match.ordinalNumber(dateString, {\n          unit: 'year'\n        }), valueCallback);\n\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    var currentYear = date.getUTCFullYear();\n\n    if (value.isTwoDigitYear) {\n      var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n      date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n\n    var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setUTCFullYear(year, 0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n    return date;\n  }\n\n}","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Parser","mapValue","normalizeTwoDigitYear","parseNDigits","YearParser","constructor","arguments","parse","dateString","token","match","valueCallback","year","isTwoDigitYear","ordinalNumber","unit","length","validate","_date","set","date","flags","currentYear","getUTCFullYear","normalizedTwoDigitYear","setUTCFullYear","setUTCHours","era"],"sources":["/Users/azabell/Desktop/SIAT_FinalProject/FrontEnd/new_project/node_modules/date-fns/esm/parse/_lib/parsers/YearParser.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Parser } from \"../Parser.js\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.js\";\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nexport class YearParser extends Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 130);\n\n    _defineProperty(this, \"incompatibleTokens\", ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']);\n  }\n\n  parse(dateString, token, match) {\n    var valueCallback = function (year) {\n      return {\n        year: year,\n        isTwoDigitYear: token === 'yy'\n      };\n    };\n\n    switch (token) {\n      case 'y':\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n\n      case 'yo':\n        return mapValue(match.ordinalNumber(dateString, {\n          unit: 'year'\n        }), valueCallback);\n\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    var currentYear = date.getUTCFullYear();\n\n    if (value.isTwoDigitYear) {\n      var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n      date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n\n    var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setUTCFullYear(year, 0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n    return date;\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}