{"ast":null,"code":"/*!\n  * Bootstrap selector-engine.js v5.2.0 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('../util/index')) : typeof define === 'function' && define.amd ? define(['../util/index'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.SelectorEngine = factory(global.Index));\n})(this, function (index) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.0): dom/selector-engine.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n  const SelectorEngine = {\n    find(selector, element = document.documentElement) {\n      return [].concat(...Element.prototype.querySelectorAll.call(element, selector));\n    },\n\n    findOne(selector, element = document.documentElement) {\n      return Element.prototype.querySelector.call(element, selector);\n    },\n\n    children(element, selector) {\n      return [].concat(...element.children).filter(child => child.matches(selector));\n    },\n\n    parents(element, selector) {\n      const parents = [];\n      let ancestor = element.parentNode.closest(selector);\n\n      while (ancestor) {\n        parents.push(ancestor);\n        ancestor = ancestor.parentNode.closest(selector);\n      }\n\n      return parents;\n    },\n\n    prev(element, selector) {\n      let previous = element.previousElementSibling;\n\n      while (previous) {\n        if (previous.matches(selector)) {\n          return [previous];\n        }\n\n        previous = previous.previousElementSibling;\n      }\n\n      return [];\n    },\n\n    // TODO: this is now unused; remove later along with prev()\n    next(element, selector) {\n      let next = element.nextElementSibling;\n\n      while (next) {\n        if (next.matches(selector)) {\n          return [next];\n        }\n\n        next = next.nextElementSibling;\n      }\n\n      return [];\n    },\n\n    focusableChildren(element) {\n      const focusables = ['a', 'button', 'input', 'textarea', 'select', 'details', '[tabindex]', '[contenteditable=\"true\"]'].map(selector => `${selector}:not([tabindex^=\"-\"])`).join(',');\n      return this.find(focusables, element).filter(el => !index.isDisabled(el) && index.isVisible(el));\n    }\n\n  };\n  return SelectorEngine;\n});","map":{"version":3,"mappings":";;;;;;;;;EAAA;;;;;;;EASA;;;;EAIA,MAAMA,cAAc,GAAG;IACrBC,IAAI,CAACC,QAAD,EAAWC,OAAO,GAAGC,QAAQ,CAACC,eAA9B,EAA+C;MACjD,OAAO,GAAGC,MAAH,CAAU,GAAGC,OAAO,CAACC,SAARD,CAAkBE,gBAAlBF,CAAmCG,IAAnCH,CAAwCJ,OAAxCI,EAAiDL,QAAjDK,CAAb,CAAP;IAFmB;;IAKrBI,OAAO,CAACT,QAAD,EAAWC,OAAO,GAAGC,QAAQ,CAACC,eAA9B,EAA+C;MACpD,OAAOE,OAAO,CAACC,SAARD,CAAkBK,aAAlBL,CAAgCG,IAAhCH,CAAqCJ,OAArCI,EAA8CL,QAA9CK,CAAP;IANmB;;IASrBM,QAAQ,CAACV,OAAD,EAAUD,QAAV,EAAoB;MAC1B,OAAO,GAAGI,MAAH,CAAU,GAAGH,OAAO,CAACU,QAArB,EAA+BC,MAA/B,CAAsCC,KAAK,IAAIA,KAAK,CAACC,OAAND,CAAcb,QAAda,CAA/C,CAAP;IAVmB;;IAarBE,OAAO,CAACd,OAAD,EAAUD,QAAV,EAAoB;MACzB,MAAMe,OAAO,GAAG,EAAhB;MACA,IAAIC,QAAQ,GAAGf,OAAO,CAACgB,UAARhB,CAAmBiB,OAAnBjB,CAA2BD,QAA3BC,CAAf;;MAEA,OAAOe,QAAP,EAAiB;QACfD,OAAO,CAACI,IAARJ,CAAaC,QAAbD;QACAC,QAAQ,GAAGA,QAAQ,CAACC,UAATD,CAAoBE,OAApBF,CAA4BhB,QAA5BgB,CAAXA;MACD;;MAED,OAAOD,OAAP;IAtBmB;;IAyBrBK,IAAI,CAACnB,OAAD,EAAUD,QAAV,EAAoB;MACtB,IAAIqB,QAAQ,GAAGpB,OAAO,CAACqB,sBAAvB;;MAEA,OAAOD,QAAP,EAAiB;QACf,IAAIA,QAAQ,CAACP,OAATO,CAAiBrB,QAAjBqB,CAAJ,EAAgC;UAC9B,OAAO,CAACA,QAAD,CAAP;QACD;;QAEDA,QAAQ,GAAGA,QAAQ,CAACC,sBAApBD;MACD;;MAED,OAAO,EAAP;IApCmB;;IAsCrB;IACAE,IAAI,CAACtB,OAAD,EAAUD,QAAV,EAAoB;MACtB,IAAIuB,IAAI,GAAGtB,OAAO,CAACuB,kBAAnB;;MAEA,OAAOD,IAAP,EAAa;QACX,IAAIA,IAAI,CAACT,OAALS,CAAavB,QAAbuB,CAAJ,EAA4B;UAC1B,OAAO,CAACA,IAAD,CAAP;QACD;;QAEDA,IAAI,GAAGA,IAAI,CAACC,kBAAZD;MACD;;MAED,OAAO,EAAP;IAlDmB;;IAqDrBE,iBAAiB,CAACxB,OAAD,EAAU;MACzB,MAAMyB,UAAU,GAAG,CACjB,GADiB,EAEjB,QAFiB,EAGjB,OAHiB,EAIjB,UAJiB,EAKjB,QALiB,EAMjB,SANiB,EAOjB,YAPiB,EAQjB,0BARiB,EASjBC,GATiB,CASb3B,QAAQ,IAAOA,WATF,yBASmC4B,IATnC,CASwC,GATxC,CAAnB;MAWA,OAAO,KAAK7B,IAAL,CAAU2B,UAAV,EAAsBzB,OAAtB,EAA+BW,MAA/B,CAAsCiB,EAAE,IAAI,CAACC,iBAAWD,EAAXC,CAAD,IAAmBC,gBAAUF,EAAVE,CAA/D,CAAP;IACD;;EAlEoB,CAAvB","names":["SelectorEngine","find","selector","element","document","documentElement","concat","Element","prototype","querySelectorAll","call","findOne","querySelector","children","filter","child","matches","parents","ancestor","parentNode","closest","push","prev","previous","previousElementSibling","next","nextElementSibling","focusableChildren","focusables","map","join","el","isDisabled","isVisible"],"sources":["../../src/dom/selector-engine.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.0): dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { isDisabled, isVisible } from '../util/index'\n\n/**\n * Constants\n */\n\nconst SelectorEngine = {\n  find(selector, element = document.documentElement) {\n    return [].concat(...Element.prototype.querySelectorAll.call(element, selector))\n  },\n\n  findOne(selector, element = document.documentElement) {\n    return Element.prototype.querySelector.call(element, selector)\n  },\n\n  children(element, selector) {\n    return [].concat(...element.children).filter(child => child.matches(selector))\n  },\n\n  parents(element, selector) {\n    const parents = []\n    let ancestor = element.parentNode.closest(selector)\n\n    while (ancestor) {\n      parents.push(ancestor)\n      ancestor = ancestor.parentNode.closest(selector)\n    }\n\n    return parents\n  },\n\n  prev(element, selector) {\n    let previous = element.previousElementSibling\n\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous]\n      }\n\n      previous = previous.previousElementSibling\n    }\n\n    return []\n  },\n  // TODO: this is now unused; remove later along with prev()\n  next(element, selector) {\n    let next = element.nextElementSibling\n\n    while (next) {\n      if (next.matches(selector)) {\n        return [next]\n      }\n\n      next = next.nextElementSibling\n    }\n\n    return []\n  },\n\n  focusableChildren(element) {\n    const focusables = [\n      'a',\n      'button',\n      'input',\n      'textarea',\n      'select',\n      'details',\n      '[tabindex]',\n      '[contenteditable=\"true\"]'\n    ].map(selector => `${selector}:not([tabindex^=\"-\"])`).join(',')\n\n    return this.find(focusables, element).filter(el => !isDisabled(el) && isVisible(el))\n  }\n}\n\nexport default SelectorEngine\n"]},"metadata":{},"sourceType":"script"}