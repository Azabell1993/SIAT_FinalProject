{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits } from \"../utils.js\";\nexport class Hour0to23Parser extends Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 70);\n\n    _defineProperty(this, \"incompatibleTokens\", ['a', 'b', 'h', 'K', 'k', 't', 'T']);\n  }\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case 'H':\n        return parseNumericPattern(numericPatterns.hour23h, dateString);\n\n      case 'Ho':\n        return match.ordinalNumber(dateString, {\n          unit: 'hour'\n        });\n\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 23;\n  }\n\n  set(date, _flags, value) {\n    date.setUTCHours(value, 0, 0, 0);\n    return date;\n  }\n\n}","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Parser","numericPatterns","parseNumericPattern","parseNDigits","Hour0to23Parser","constructor","arguments","parse","dateString","token","match","hour23h","ordinalNumber","unit","length","validate","_date","set","date","_flags","setUTCHours"],"sources":["/Users/azabell/Desktop/SIAT_FinalProject/FrontEnd/new_project/node_modules/date-fns/esm/parse/_lib/parsers/Hour0to23Parser.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits } from \"../utils.js\";\nexport class Hour0to23Parser extends Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 70);\n\n    _defineProperty(this, \"incompatibleTokens\", ['a', 'b', 'h', 'K', 'k', 't', 'T']);\n  }\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case 'H':\n        return parseNumericPattern(numericPatterns.hour23h, dateString);\n\n      case 'Ho':\n        return match.ordinalNumber(dateString, {\n          unit: 'hour'\n        });\n\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 23;\n  }\n\n  set(date, _flags, value) {\n    date.setUTCHours(value, 0, 0, 0);\n    return date;\n  }\n\n}"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;EAAE,IAAID,GAAG,IAAID,GAAX,EAAgB;IAAEG,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;MAAEC,KAAK,EAAEA,KAAT;MAAgBG,UAAU,EAAE,IAA5B;MAAkCC,YAAY,EAAE,IAAhD;MAAsDC,QAAQ,EAAE;IAAhE,CAAhC;EAA0G,CAA5H,MAAkI;IAAEP,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;EAAmB;;EAAC,OAAOF,GAAP;AAAa;;AAEjN,SAASQ,MAAT,QAAuB,cAAvB;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,aAAlD;AACA,OAAO,MAAMC,eAAN,SAA8BJ,MAA9B,CAAqC;EAC1CK,WAAW,GAAG;IACZ,MAAM,GAAGC,SAAT;;IAEAf,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,EAAnB,CAAf;;IAEAA,eAAe,CAAC,IAAD,EAAO,oBAAP,EAA6B,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CAA7B,CAAf;EACD;;EAEDgB,KAAK,CAACC,UAAD,EAAaC,KAAb,EAAoBC,KAApB,EAA2B;IAC9B,QAAQD,KAAR;MACE,KAAK,GAAL;QACE,OAAOP,mBAAmB,CAACD,eAAe,CAACU,OAAjB,EAA0BH,UAA1B,CAA1B;;MAEF,KAAK,IAAL;QACE,OAAOE,KAAK,CAACE,aAAN,CAAoBJ,UAApB,EAAgC;UACrCK,IAAI,EAAE;QAD+B,CAAhC,CAAP;;MAIF;QACE,OAAOV,YAAY,CAACM,KAAK,CAACK,MAAP,EAAeN,UAAf,CAAnB;IAVJ;EAYD;;EAEDO,QAAQ,CAACC,KAAD,EAAQtB,KAAR,EAAe;IACrB,OAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAA9B;EACD;;EAEDuB,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAezB,KAAf,EAAsB;IACvBwB,IAAI,CAACE,WAAL,CAAiB1B,KAAjB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;IACA,OAAOwB,IAAP;EACD;;AA/ByC"},"metadata":{},"sourceType":"module"}