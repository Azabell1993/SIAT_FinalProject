{"ast":null,"code":"import axios from 'axios';\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\nexport default {\n  data() {\n    return {\n      memID: '',\n      memPW: '',\n      memPWCheck: '',\n      memName: '',\n      memAddr: '',\n      memPhone: '',\n      memEmail: '',\n      memBirth: ''\n    };\n  },\n\n  /* 아이디 중복 체크 */\n  methods: {\n    sendPost() {\n      console.log('test');\n      axios.post('http://192.168.0.81:8081/idCheckProc', {\n        memID: this.memID\n      }).then(function (res) {\n        console.log(res.data);\n        console.log(res.data.mem.memID);\n        console.log(res.data.mem.memRole.roleCode);\n        this.$emit(res.data.mem.memID);\n      }).catch(function () {\n        console.log('failed');\n      });\n    }\n\n  },\n\n  /* 회원정보 보내기 */\n  methods: {\n    sendPost() {\n      console.log('test');\n      axios.post('http://192.168.0.81:8081/', {\n        memID: '',\n        memPW: '',\n        memPWCheck: '',\n        memName: '',\n        memAddr: '',\n        memPhone: '',\n        memEmail: '',\n        memBirth: ''\n      }).then(function (res) {\n        console.log(res.data);\n        console.log(res.data.mem.memID);\n        console.log(res.data.mem.memRole.roleCode);\n        this.$emit(res.data.mem.memID);\n      }).catch(function () {\n        console.log('failed');\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAwBA,OAAOA,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,6BAA9B,IAA+D,GAA/D;AAEA,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACHC,KAAK,EAAC,EADH;MAEHC,KAAK,EAAC,EAFH;MAGHC,UAAU,EAAC,EAHR;MAIHC,OAAO,EAAC,EAJL;MAKHC,OAAO,EAAC,EALL;MAMHC,QAAQ,EAAC,EANN;MAOHC,QAAQ,EAAC,EAPN;MAQHC,QAAQ,EAAC;IARN,CAAP;EAUD,CAZY;;EAab;EACAC,OAAO,EAAE;IACPC,QAAO,GAAK;MACVC,OAAO,CAACC,GAAR,CAAY,MAAZ;MACAhB,KAAK,CAACiB,IAAN,CAAW,sCAAX,EAAmD;QACjDZ,KAAK,EAAE,KAAKA;MADqC,CAAnD,EAGGa,IAHH,CAGQ,UAAUC,GAAV,EAAe;QACnBJ,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACf,IAAhB;QACAW,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACf,IAAJ,CAASgB,GAAT,CAAaf,KAAzB;QACAU,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACf,IAAJ,CAASgB,GAAT,CAAaC,OAAb,CAAqBC,QAAjC;QACA,KAAKC,KAAL,CAAWJ,GAAG,CAACf,IAAJ,CAASgB,GAAT,CAAaf,KAAxB;MACD,CARH,EAQKmB,KARL,CAQW,YAAY;QACnBT,OAAO,CAACC,GAAR,CAAY,QAAZ;MACD,CAVH;IAWF;;EAdO,CAdI;;EA8Bb;EACAH,OAAO,EAAE;IACPC,QAAO,GAAK;MACVC,OAAO,CAACC,GAAR,CAAY,MAAZ;MACAhB,KAAK,CAACiB,IAAN,CAAW,2BAAX,EAAwC;QACtCZ,KAAK,EAAC,EADgC;QAEtCC,KAAK,EAAC,EAFgC;QAGtCC,UAAU,EAAC,EAH2B;QAItCC,OAAO,EAAC,EAJ8B;QAKtCC,OAAO,EAAC,EAL8B;QAMtCC,QAAQ,EAAC,EAN6B;QAOtCC,QAAQ,EAAC,EAP6B;QAQtCC,QAAQ,EAAC;MAR6B,CAAxC,EAUGM,IAVH,CAUQ,UAAUC,GAAV,EAAe;QACnBJ,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACf,IAAhB;QACAW,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACf,IAAJ,CAASgB,GAAT,CAAaf,KAAzB;QACAU,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACf,IAAJ,CAASgB,GAAT,CAAaC,OAAb,CAAqBC,QAAjC;QACA,KAAKC,KAAL,CAAWJ,GAAG,CAACf,IAAJ,CAASgB,GAAT,CAAaf,KAAxB;MACD,CAfH,EAeKmB,KAfL,CAeW,YAAY;QACnBT,OAAO,CAACC,GAAR,CAAY,QAAZ;MACD,CAjBH;IAkBF;;EArBO;AA/BI,CAAf","names":["axios","defaults","headers","common","data","memID","memPW","memPWCheck","memName","memAddr","memPhone","memEmail","memBirth","methods","sendPost","console","log","post","then","res","mem","memRole","roleCode","$emit","catch"],"sourceRoot":"","sources":["/Users/azabell/Desktop/SIAT_FinalProject/FrontEnd/new_jiwoo/src/views/SignView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div>\n      <h1>Sign Up 페이지입니다.</h1>\n      </div>\n      <form action=\"/SignTest\" @submit.prevent=\"sendPost\">\n           <label for=\"memID\">아이디 : <input type=\"text\" id=\"memID\" v-model=\"memID\"><p id=\"userid_msg\"></p></label>\n          <button>Send</button>\n      </form>\n     \n      <label for=\"memPW\">비밀번호 : <input type=\"password\" id=\"memPW\" v-model=\"memPW\"></label><br>\n      <label for=\"memPWCheck\">비밀번호 확인 : <input type=\"password\" id=\"memPWCheck\" v-model=\"memPWCheck\"></label><br>\n      <label for=\"memName\">이름 : <input type=\"text\" id=\"memName\" v-model=\"memName\"></label><br>\n      <label for=\"memAddr\">주소 : <input type=\"text\" id=\"memAddr\" v-model=\"memAddr\"></label><br>\n      <label for=\"memPhone\">전화번호 : <input type=\"text\" id=\"memPhone\" v-model=\"memPhone\"></label><br>\n      <label for=\"memEmail\">이메일 : <input type=\"email\" id=\"memEmail\" v-model=\"memEmail\"></label>\n      <br>\n      <label for=\"memBirth\">생년월일 : <input type=\"date\" id=\"memBirth\" v-model=\"memBirth\"></label><br>\n      <input type=\"reset\" value=\"초기화\">\n      <input type=\"submit\" id=\"login_submit\" value=\"가입\">\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*'\n\nexport default {\n  data() {\n    return {\n        memID:'',\n        memPW:'',\n        memPWCheck:'',\n        memName:'',\n        memAddr:'',\n        memPhone:'',\n        memEmail:'',\n        memBirth:'',\n    };\n  },\n  /* 아이디 중복 체크 */\n  methods: {\n    sendPost () {\n      console.log('test')\n      axios.post('http://192.168.0.81:8081/idCheckProc', {\n        memID: this.memID\n      })\n        .then(function (res) {\n          console.log(res.data)\n          console.log(res.data.mem.memID)\n          console.log(res.data.mem.memRole.roleCode)\n          this.$emit(res.data.mem.memID)\n        }).catch(function () {\n          console.log('failed')\n        })\n    }\n  },\n  /* 회원정보 보내기 */\n  methods: {\n    sendPost () {\n      console.log('test')\n      axios.post('http://192.168.0.81:8081/', {\n        memID:'',\n        memPW:'',\n        memPWCheck:'',\n        memName:'',\n        memAddr:'',\n        memPhone:'',\n        memEmail:'',\n        memBirth:'',\n      })\n        .then(function (res) {\n          console.log(res.data)\n          console.log(res.data.mem.memID)\n          console.log(res.data.mem.memRole.roleCode)\n          this.$emit(res.data.mem.memID)\n        }).catch(function () {\n          console.log('failed')\n        })\n    }\n  }\n}\n\n</script>\n"]},"metadata":{},"sourceType":"module"}