{"ast":null,"code":"import storeProduct from '@/store/recommendProducts';\nimport storeUser from '@/store/index';\nimport axios from 'axios';\nconst url = 'http://192.168.219.162:9292';\nexport default {\n  data() {\n    return {\n      productInfo: [],\n      proCount: ''\n    };\n  },\n\n  created() {\n    const vm = this; //시간 설정한 이유, 앞의 ProductList에서 selectOneProductCode에 저장하고 불러와주는 속도가 \n    //이 페이지에서 selectOneProductCode 정보를 갖고오는게 더 빠름,\n    //그래서 시간을 지연시킨 후 productDetail 코드를 불러 와준 후, 상품 정보를 갖고 오게 하자고 생각\n\n    setTimeout(() => {\n      console.log('ProductDetail Code : ', storeProduct.state.selectOneProductCode);\n      axios.post(url + '/pro/proInfo', {\n        proCode: storeProduct.state.selectOneProductCode\n      }).then(function (response) {\n        console.log(response.data.data);\n        vm.productInfo = response.data.data;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }, 500);\n  },\n\n  methods: {\n    //테이블에 있는 td 값만 가져와서 myCart컨트롤러로 데이터 전달하는 기능\n    mycartToproInfo() {\n      console.log(storeUser.state.loginUser.memID);\n\n      if (confirm(\"선택한 상품을 장바구니에 담겠습니까?\") == true) {\n        //확인\n        axios.post(url + '/cart/addCart', {\n          //addCart, cartInfo\n          memID: storeUser.state.loginUser.memID,\n          proCode: this.productInfo.proCode,\n          cartCount: this.proCount\n        }).then(function (response) {});\n      } else {\n        //취소\n        alert('장바구니 담기가 취소되었습니다.');\n        return;\n      } //memID, proCount, proCode\n      // console.log('장바구니 전달 데이터: ', this.productInfo.proCode)\n      // console.log(this.proCount)\n      //상품 조회시 뷰 증가 //proView, get\n\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAmDA,OAAOA,YAAP,MAAyB,2BAAzB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAE,GAAI,6BAAZ;AAEA,eAAe;EACbC,IAAG,GAAK;IACN,OAAO;MACLC,WAAU,EAAI,EADT;MAELC,QAAO,EAAI;IAFN,CAAP;EAID,CANY;;EAObC,OAAM,GAAK;IACT,MAAMC,EAAC,GAAI,IAAX,CADS,CAET;IACA;IACA;;IACAC,UAAU,CAAC,MAAM;MACfC,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCX,YAAY,CAACY,KAAb,CAAmBC,oBAAxD;MACAX,KAAK,CAACY,IAAN,CAAWX,GAAG,GAAC,cAAf,EAA+B;QAC7BY,OAAM,EAAIf,YAAY,CAACY,KAAb,CAAmBC;MADA,CAA/B,EAGCG,IAHD,CAGM,UAAUC,QAAV,EAAoB;QACxBP,OAAO,CAACC,GAAR,CAAYM,QAAQ,CAACb,IAAT,CAAcA,IAA1B;QACAI,EAAE,CAACH,WAAH,GAAiBY,QAAQ,CAACb,IAAT,CAAcA,IAA/B;MACD,CAND,EAOCc,KAPD,CAOO,UAASC,KAAT,EAAe;QACpBT,OAAO,CAACC,GAAR,CAAYQ,KAAZ;MACD,CATD;IAUD,CAZS,EAYP,GAZO,CAAV;EAaD,CAzBY;;EA0BbC,OAAM,EAAI;IACR;IACAC,eAAc,GAAK;MACjBX,OAAO,CAACC,GAAR,CAAYV,SAAS,CAACW,KAAV,CAAgBU,SAAhB,CAA0BC,KAAtC;;MAEA,IAAKC,OAAO,CAAC,sBAAD,CAAP,IAAmC,IAAxC,EAA6C;QACxC;QACDtB,KAAK,CAACY,IAAN,CAAWX,GAAG,GAAC,eAAf,EAAgC;UAChC;UACAoB,KAAI,EAAItB,SAAS,CAACW,KAAV,CAAgBU,SAAhB,CAA0BC,KAFF;UAGhCR,OAAM,EAAI,KAAKV,WAAL,CAAiBU,OAHK;UAIhCU,SAAQ,EAAI,KAAKnB;QAJe,CAAhC,EAMHU,IANG,CAME,UAASC,QAAT,EAAmB,CAExB,CARG;MASH,CAXD,MAWM;QAAI;QACNS,KAAK,CAAC,mBAAD,CAAL;QACA;MACJ,CAjBiB,CAmBjB;MACA;MAEA;MACA;;IACF;;EA1BQ;AA1BG,CAAf","names":["storeProduct","storeUser","axios","url","data","productInfo","proCount","created","vm","setTimeout","console","log","state","selectOneProductCode","post","proCode","then","response","catch","error","methods","mycartToproInfo","loginUser","memID","confirm","cartCount","alert"],"sourceRoot":"","sources":["/Users/azabell/Desktop/SIAT_FinalProject/FrontEnd/new_jiwoo/src/components/ProductDetail.vue"],"sourcesContent":["<template>\n<div>\n  <h1>제품 상세 페이지입니다.</h1>\n  <img src=\"\" alt=\"\">\n  <table>\n    <tr>\n      <th>상품명</th>\n      <td>{{productInfo.proName}}</td>\n    </tr>\n\n    <tr>\n      <th>상세정보</th>\n      <td>{{productInfo.proDetail}}</td>\n    </tr>\n\n    <tr v-bind:key=\"item\" v-for=\"(item, index) in productInfo.proCategory\">\n      <th v-if=\"index == 'categoryLargeName'\">카테고리 대분류</th>\n        <td v-if=\"index == 'categoryLargeName'\">{{ item }}</td>\n      <th v-if=\"index == 'categorySmallName'\">카테고리 소분류</th>\n        <td v-if=\"index == 'categorySmallName'\">{{ item }}</td>\n    </tr>\n\n    <tr>\n      <th>상품가격</th>\n      <td>{{productInfo.proPrice}}</td>\n    </tr>\n\n    <tr v-bind:key=\"item\" v-for=\"(item, index) in productInfo.proColor\">\n      <th  v-if=\"index == 'colorName'\">상품 색깔</th>\n        <td v-if=\"index == 'colorName'\">{{ item }}</td>\n    </tr>\n\n    <tr>\n      <!-- 수량 증가 버튼 -->\n      <th>상품 수량</th>\n      <td><input type=\"number\" v-model=\"proCount\"></td>\n    </tr>\n  </table>\n\n  <div>재고 수량 : {{productInfo.proStock}}</div>\n  <button v-on:click=\"mycartToproInfo()\">장바구니 담기</button>\n  <button>상품 삭제(관리자 전용)</button>\n  <!-- 장바구니에 담기 버튼 -->\n\n  <!-- <div v-bind:key=\"index\" v-for=\"(index, item) in productInfo\">\n    <p>{{ item }} : {{index}}</p>\n  </div> -->\n</div>\n</template>\n\n<script>\nimport storeProduct from '@/store/recommendProducts'\nimport storeUser from '@/store/index'\nimport axios from 'axios'\n\nconst url = 'http://192.168.219.162:9292'\n\nexport default {\n  data () {\n    return {\n      productInfo : [],\n      proCount : ''\n    }\n  },\n  created () {\n    const vm = this\n    //시간 설정한 이유, 앞의 ProductList에서 selectOneProductCode에 저장하고 불러와주는 속도가 \n    //이 페이지에서 selectOneProductCode 정보를 갖고오는게 더 빠름,\n    //그래서 시간을 지연시킨 후 productDetail 코드를 불러 와준 후, 상품 정보를 갖고 오게 하자고 생각\n    setTimeout(() => {\n      console.log('ProductDetail Code : ', storeProduct.state.selectOneProductCode)\n      axios.post(url+'/pro/proInfo', { \n        proCode : storeProduct.state.selectOneProductCode\n      })\n      .then(function (response) {\n        console.log(response.data.data)\n        vm.productInfo = response.data.data\n      })\n      .catch(function(error){\n        console.log(error)\n      })\n    }, 500)\n  },\n  methods : {\n    //테이블에 있는 td 값만 가져와서 myCart컨트롤러로 데이터 전달하는 기능\n    mycartToproInfo () {\n      console.log(storeUser.state.loginUser.memID)\n\n      if ( confirm(\"선택한 상품을 장바구니에 담겠습니까?\") == true){   \n           //확인\n          axios.post(url+'/cart/addCart', {\n          //addCart, cartInfo\n          memID : storeUser.state.loginUser.memID,\n          proCode : this.productInfo.proCode,\n          cartCount : this.proCount\n        })\n      .then(function(response) {\n        \n      })\n      }else {   //취소\n          alert('장바구니 담기가 취소되었습니다.')\n          return;\n      }\n\n      //memID, proCount, proCode\n      // console.log('장바구니 전달 데이터: ', this.productInfo.proCode)\n       \n      // console.log(this.proCount)\n      //상품 조회시 뷰 증가 //proView, get\n    }\n  }\n   \n}\n</script>\n\n<style scoped>\ntable {\n    margin-left:auto; \n    margin-right:auto;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}