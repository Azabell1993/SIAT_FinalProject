{"ast":null,"code":"import axios from 'axios';\nimport store from '@/store/index';\nimport MypageCategoryVue from '@/components/MypageCategory.vue';\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\nexport default {\n  components: {\n    MypageCategoryVue,\n\n    loginuser() {\n      return this.memID;\n    }\n\n  },\n\n  data() {\n    return {\n      deleteup: {\n        memID: store.state.loginUser.memID,\n        memPW: null,\n        memPWCheck: null,\n        memName: store.state.loginUser.memName,\n        memAddr: store.state.loginUser.memAddr,\n        memPhone: store.state.loginUser.memPhone,\n        memEmail: store.state.loginUser.memEmail,\n        memBirth: store.state.loginUser.memBirth\n      },\n      passwordValidFlag: true,\n      asswordCheck: ''\n    };\n  },\n\n  methods: {\n    /* 비밀번호 정규식 */\n    passwordValid() {\n      if (store.state.loginUser.memPW === this.deleteup.memPW) {\n        this.passwordValidFlag = true;\n      } else {\n        this.passwordValidFlag = false;\n      }\n    },\n\n    passwordCheckValid() {\n      if (this.deleteup.memPW === this.deleteup.memPWCheck) {\n        this.passwordCheckFlag = true;\n      } else {\n        alert(\"두 비밀번호가 같아야합니다.\");\n        this.passwordCheckFlag = false;\n      }\n    },\n\n    /* pw check */\n    checkPw() {\n      if (!store.state.loginUser.memPW) {\n        alert(\"다시 입력해주세요.\");\n        return false;\n      } else {\n        //alert(\"맞게 입력하셨습니다.\");\n        return true;\n      }\n    },\n\n    /* 회원가입 정보 전체 넘기기 */\n    deleteupProc() {\n      // console.log('ID test')\n      if (!this.deleteup.memPW) {\n        alert(\"비밀번호를 입력해주세요!\");\n        return false;\n      } else if (!this.deleteup.memPWCheck) {\n        alert(\"비밀번호 체크를 해주세요!\");\n        return false;\n      } else {\n        axios.post('http://192.168.0.81:9292/mem/deleteProc', {\n          memID: this.deleteup.memID,\n          memPW: this.deleteup.memPW,\n          memName: this.deleteup.memName,\n          memAddr: this.deleteup.memAddr,\n          memPhone: this.deleteup.memPhone,\n          memEmail: this.deleteup.memEmail,\n          memBirth: this.deleteup.memBirth\n        }).then(function () {\n          if (!confirm('정말 회원탈퇴를 하시겠습니까?')) {\n            alert(\"회원퇴가 완료되었습니다.\");\n            this.memID = '';\n            this.$store.commit('updateloginUserID', this.memID);\n            location.href = \"http://localhost:8081/\";\n            return true;\n          } else {\n            alert(\"취소되었습니다.\");\n            return false;\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    } // modifyupProc\n\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","store","MypageCategoryVue","defaults","headers","common","components","loginuser","memID","data","deleteup","state","loginUser","memPW","memPWCheck","memName","memAddr","memPhone","memEmail","memBirth","passwordValidFlag","asswordCheck","methods","passwordValid","passwordCheckValid","passwordCheckFlag","alert","checkPw","deleteupProc","post","then","confirm","$store","commit","location","href","catch","error","console","log"],"sourceRoot":"","sources":["/Users/azabell/Desktop/SIAT_FinalProject/FrontEnd/new_jiwoo/src/views/mypage/MemberResign.vue"],"sourcesContent":["<template>\n<MypageCategoryVue></MypageCategoryVue>\n<hr>\n  <h1>회원 탈퇴 페이지</h1>\n\n  <form @submit.prevent=\"deleteupProc\">  <!-- sendPost 함수 실행 -->\n  <hr>\n        <label for=\"memID\">ID : <input id=\"memID\" v-model=\"deleteup.memID\" type=\"text\" readonly></label><br><br>\n       <label for=\"memPW\">비밀번호 : \n         <input type=\"password\" id=\"memPW\" v-model=\"deleteup.memPW\" @blur=\"passwordValid\" ref=\"memPWck\"></label><br>\n        <label for=\"memPWCheck\">비밀번호 확인 : <input type=\"password\" id=\"memPWCheck\" v-model=\"deleteup.memPWCheck\" maxlength=\"16\" @blur=\"passwordCheckValid\" ref=\"modifyup.memPW\"></label><br>\n        <div v-if=\"!passwordValidFlag\">유효하지 않은 비밀번호 입니다.</div><hr>\n\n        <input type=\"reset\" value=\"초기화\">\n        <input type=\"submit\" id=\"signout_submit\" value=\"회원 탈퇴\">\n<hr>\n    </form>\n</template>\n\n<script>\nimport axios from 'axios'\nimport store from '@/store/index'\nimport MypageCategoryVue from '@/components/MypageCategory.vue'\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*'\n\nexport default {\n  components: {\n    MypageCategoryVue,\n    loginuser () {\n      return this.memID\n    }\n  },\n\n  data() {\n    return {\n      deleteup : {\n        memID : store.state.loginUser.memID,\n        memPW : null,\n        memPWCheck : null,\n        memName: store.state.loginUser.memName,\n        memAddr: store.state.loginUser.memAddr,\n        memPhone:store.state.loginUser.memPhone,\n        memEmail :store.state.loginUser.memEmail,\n        memBirth: store.state.loginUser.memBirth\n      },\n      passwordValidFlag: true,\n      asswordCheck: '',\n    };          \n  },\n\n  methods : {\n\n\n    /* 비밀번호 정규식 */\n    passwordValid () {\n      if (store.state.loginUser.memPW === this.deleteup.memPW) {\n        this.passwordValidFlag = true\n      } else {\n        this.passwordValidFlag = false\n      }\n    },\n\n     passwordCheckValid () {\n      if (this.deleteup.memPW === this.deleteup.memPWCheck) {\n        this.passwordCheckFlag = true\n      } else {\n        alert(\"두 비밀번호가 같아야합니다.\");\n        this.passwordCheckFlag = false\n      }\n    },\n\n    /* pw check */\n    checkPw() {\n      if(!(store.state.loginUser.memPW)) {\t\t\n        alert(\"다시 입력해주세요.\");\t\t\n        return false;\n      } else {\n        //alert(\"맞게 입력하셨습니다.\");\n        return true;\n      }\n    },\n\n\n    /* 회원가입 정보 전체 넘기기 */\n    deleteupProc() {    \n\n      // console.log('ID test')\n      \n      if(!this.deleteup.memPW) {\n        alert(\"비밀번호를 입력해주세요!\");\n        return false;\n      } else if(!this.deleteup.memPWCheck) {\n        alert(\"비밀번호 체크를 해주세요!\");\n        return false;\n      } else {\n        axios.post('http://192.168.0.81:9292/mem/deleteProc', {          \n          memID: this.deleteup.memID,\n          memPW: this.deleteup.memPW,\n          memName: this.deleteup.memName,\n          memAddr: this.deleteup.memAddr,\n          memPhone: this.deleteup.memPhone,\n          memEmail: this.deleteup.memEmail,\n          memBirth : this.deleteup.memBirth\n        }) .then(function ( ) {\n            if(!(confirm('정말 회원탈퇴를 하시겠습니까?'))) {\n              alert(\"회원퇴가 완료되었습니다.\");\n              this.memID = ''\n              this.$store.commit('updateloginUserID', this.memID)\n              location.href = \"http://localhost:8081/\"\n              return true;\n            } else {\n              alert(\"취소되었습니다.\");\n              return false;\n            }\n        }).catch(function (error) {\n            console.log(error)\n        })\n\n      }\n\n    } // modifyupProc\n\n\n  }\n}\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}