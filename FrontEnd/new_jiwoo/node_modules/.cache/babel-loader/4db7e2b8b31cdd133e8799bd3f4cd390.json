{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, withCtx as _withCtx } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"하의 페이지입니다.\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CategoryList = _resolveComponent(\"CategoryList\");\n\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_CategoryList), _hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.productPantsInfos, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      id: \"productList\",\n      key: item\n    }, [_createVNode(_component_router_link, {\n      onClick: $event => $options.productInfoRelay(item.proCode),\n      to: \"/productdetail\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"p\", null, _toDisplayString(item.proName), 1\n      /* TEXT */\n      ), _createCommentVNode(\" <img v-bind:src=\\\"require(`@/assets/image/${item.proImage}.png`)\\\"> \")]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"onClick\"]), _createElementVNode(\"p\", null, _toDisplayString(item.proPrice), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;gCAGEA,oBAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,EAAc;AAAA;AAAd;;;;;;;uBAFFC,oBAUM,KAVN,EAUM,IAVN,EAUM,CATJC,aAA6BC,uBAA7B,CASI,EARJC,UAQI,qBAPJH,oBAMMI,SANN,EAMM,IANN,EAMMC,YANiDC,uBAMjD,EANyCC,IAAyB,IAArB;yBAAnDP,oBAMM,KANN,EAMM;MANDQ,EAAE,EAAC,aAMF;MANuBC,GAAG,EAAEF;IAM5B,CANN,GACEN,aAGcS,sBAHd,EAGc;MAHIC,OAAK,YAAEC,0BAAiBL,IAAI,CAACM,OAAtB,CAGX;MAH2CC,EAAE,EAAC;IAG9C,CAHd;wBACE,MAAuB,CAAvBf,oBAAuB,GAAvB,EAAuB,IAAvB,EAAuBgB,iBAAlBR,IAAI,CAACS,OAAa,CAAvB,EAAiB;MAAA;MAAjB,CAAuB,EACvBC,4FADuB;;;;KADzB;;IAAA,gBAIAlB,oBAAwB,GAAxB,EAAwB,IAAxB,EAAwBgB,iBAAnBR,IAAI,CAACW,QAAc,CAAxB,EAAkB;IAAA;IAAlB,EALF;GAMM,CANN;;EAAA,CAOI,EAVN","names":["_createElementVNode","_createElementBlock","_createVNode","_component_CategoryList","_hoisted_1","_Fragment","_renderList","$data","item","id","key","_component_router_link","onClick","$options","proCode","to","_toDisplayString","proName","_createCommentVNode","proPrice"],"sourceRoot":"","sources":["/Users/azabell/Desktop/SIAT_FinalProject/FrontEnd/new_jiwoo/src/views/product/PantsView.vue"],"sourcesContent":["<template>\n<div>\n  <CategoryList></CategoryList>\n  <h1>하의 페이지입니다.</h1>\n  <div id=\"productList\" v-bind:key=\"item\" v-for=\"item in productPantsInfos\">\n    <router-link v-on:click=\"productInfoRelay(item.proCode)\" to=\"/productdetail\">\n      <p>{{item.proName}}</p>\n      <!-- <img v-bind:src=\"require(`@/assets/image/${item.proImage}.png`)\"> -->\n    </router-link>\n    <p>{{item.proPrice}}</p>\n  </div>\n</div>\n</template>\n\n<script>\nimport CategoryList from '@/components/CategoryList.vue'\nimport storeProduct from '@/store/recommendProducts'\nimport axios from 'axios'\n\nconst url = 'http://192.168.0.81:9292'\n\nexport default {\n  components: {\n    CategoryList\n  },\n  data () {\n    return {\n      productPantsInfos: [],\n      pantsCodeList: []\n    }\n  },\n  async created () {\n    var vm = this\n    console.log('pantsview : ', storeProduct.state.categoryPantList)\n    this.pantsCodeList = storeProduct.state.categoryPantList\n\n    if (this.pantsCodeList == \"\") {\n      console.log('Data가 없습니다.')\n    }\n    else {\n      console.log(Object.values(Object.values(this.pantsCodeList)[0]))\n      var pantsList = Object.values(Object.values(this.pantsCodeList)[0])\n    \n      for (var i=0 ;i < pantsList.length; i++) {\n        console.log(pantsList[i])\n        await axios.post(url+'/pro/proInfo', \n        {proCode : pantsList[i]})\n        .then(function (response) {\n          console.log(response.data.data);\n          vm.productPantsInfos.push(response.data.data)\n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n      }\n     }\n    },\n    methods: {\n    async productInfoRelay (newProCode) {\n      const renewList = storeProduct.state.products.productsList //저장소에 있는 상품 리스트 값\n      const oneCodeCheck = String(Object.values(renewList)).includes(newProCode)\n\n      if(oneCodeCheck == true) { //상품코드가 있다면, 그 상품코드로 상품 정보 요청\n        await axios.post(url+'/pro/proInfo', {\n          proCode : newProCode\n        })\n        .then(function(response){\n          storeProduct.commit('updateSelectOneProductCode',response.data.data.proCode)\n          //상품 한개만 요청하기 때문에, selectOne으로 지정하고, 각 상품이 클릭시 때마다 업데이트 시킴.\n          //한 상품 클릭 후, 다른 상품 클릭시 해당 상품으로 가는 것까지 확인 됨\n          console.log('ProductList code : ',storeProduct.state.selectOneProductCode)\n        })\n      }\n      else {\n        console.log('상품 정보가 존재하지 않습니다.')\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}