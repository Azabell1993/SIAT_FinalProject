{"ast":null,"code":"/*!\n  * Bootstrap backdrop.js v5.2.0 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('../dom/event-handler'), require('./index'), require('./config')) : typeof define === 'function' && define.amd ? define(['../dom/event-handler', './index', './config'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Backdrop = factory(global.EventHandler, global.Index, global.Config));\n})(this, function (EventHandler, index, Config) {\n  'use strict';\n\n  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : {\n    default: e\n  };\n\n  const EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n\n  const Config__default = /*#__PURE__*/_interopDefaultLegacy(Config);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.0): util/backdrop.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n\n  const NAME = 'backdrop';\n  const CLASS_NAME_FADE = 'fade';\n  const CLASS_NAME_SHOW = 'show';\n  const EVENT_MOUSEDOWN = `mousedown.bs.${NAME}`;\n  const Default = {\n    className: 'modal-backdrop',\n    clickCallback: null,\n    isAnimated: false,\n    isVisible: true,\n    // if false, we use the backdrop helper without adding any element to the dom\n    rootElement: 'body' // give the choice to place backdrop under different elements\n\n  };\n  const DefaultType = {\n    className: 'string',\n    clickCallback: '(function|null)',\n    isAnimated: 'boolean',\n    isVisible: 'boolean',\n    rootElement: '(element|string)'\n  };\n  /**\n   * Class definition\n   */\n\n  class Backdrop extends Config__default.default {\n    constructor(config) {\n      super();\n      this._config = this._getConfig(config);\n      this._isAppended = false;\n      this._element = null;\n    } // Getters\n\n\n    static get Default() {\n      return Default;\n    }\n\n    static get DefaultType() {\n      return DefaultType;\n    }\n\n    static get NAME() {\n      return NAME;\n    } // Public\n\n\n    show(callback) {\n      if (!this._config.isVisible) {\n        index.execute(callback);\n        return;\n      }\n\n      this._append();\n\n      const element = this._getElement();\n\n      if (this._config.isAnimated) {\n        index.reflow(element);\n      }\n\n      element.classList.add(CLASS_NAME_SHOW);\n\n      this._emulateAnimation(() => {\n        index.execute(callback);\n      });\n    }\n\n    hide(callback) {\n      if (!this._config.isVisible) {\n        index.execute(callback);\n        return;\n      }\n\n      this._getElement().classList.remove(CLASS_NAME_SHOW);\n\n      this._emulateAnimation(() => {\n        this.dispose();\n        index.execute(callback);\n      });\n    }\n\n    dispose() {\n      if (!this._isAppended) {\n        return;\n      }\n\n      EventHandler__default.default.off(this._element, EVENT_MOUSEDOWN);\n\n      this._element.remove();\n\n      this._isAppended = false;\n    } // Private\n\n\n    _getElement() {\n      if (!this._element) {\n        const backdrop = document.createElement('div');\n        backdrop.className = this._config.className;\n\n        if (this._config.isAnimated) {\n          backdrop.classList.add(CLASS_NAME_FADE);\n        }\n\n        this._element = backdrop;\n      }\n\n      return this._element;\n    }\n\n    _configAfterMerge(config) {\n      // use getElement() with the default \"body\" to get a fresh Element on each instantiation\n      config.rootElement = index.getElement(config.rootElement);\n      return config;\n    }\n\n    _append() {\n      if (this._isAppended) {\n        return;\n      }\n\n      const element = this._getElement();\n\n      this._config.rootElement.append(element);\n\n      EventHandler__default.default.on(element, EVENT_MOUSEDOWN, () => {\n        index.execute(this._config.clickCallback);\n      });\n      this._isAppended = true;\n    }\n\n    _emulateAnimation(callback) {\n      index.executeAfterTransition(callback, this._getElement(), this._config.isAnimated);\n    }\n\n  }\n\n  return Backdrop;\n});","map":{"version":3,"mappings":"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","names":["NAME","CLASS_NAME_FADE","CLASS_NAME_SHOW","EVENT_MOUSEDOWN","Default","className","clickCallback","isAnimated","isVisible","rootElement","DefaultType","Backdrop","Config","constructor","config","_config","_getConfig","_isAppended","_element","show","callback","execute","_append","element","_getElement","reflow","classList","add","_emulateAnimation","hide","remove","dispose","EventHandler","off","backdrop","document","createElement","_configAfterMerge","getElement","append","on","executeAfterTransition"],"sources":["../../src/util/backdrop.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.0): util/backdrop.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler'\nimport { execute, executeAfterTransition, getElement, reflow } from './index'\nimport Config from './config'\n\n/**\n * Constants\n */\n\nconst NAME = 'backdrop'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\nconst EVENT_MOUSEDOWN = `mousedown.bs.${NAME}`\n\nconst Default = {\n  className: 'modal-backdrop',\n  clickCallback: null,\n  isAnimated: false,\n  isVisible: true, // if false, we use the backdrop helper without adding any element to the dom\n  rootElement: 'body' // give the choice to place backdrop under different elements\n}\n\nconst DefaultType = {\n  className: 'string',\n  clickCallback: '(function|null)',\n  isAnimated: 'boolean',\n  isVisible: 'boolean',\n  rootElement: '(element|string)'\n}\n\n/**\n * Class definition\n */\n\nclass Backdrop extends Config {\n  constructor(config) {\n    super()\n    this._config = this._getConfig(config)\n    this._isAppended = false\n    this._element = null\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  show(callback) {\n    if (!this._config.isVisible) {\n      execute(callback)\n      return\n    }\n\n    this._append()\n\n    const element = this._getElement()\n    if (this._config.isAnimated) {\n      reflow(element)\n    }\n\n    element.classList.add(CLASS_NAME_SHOW)\n\n    this._emulateAnimation(() => {\n      execute(callback)\n    })\n  }\n\n  hide(callback) {\n    if (!this._config.isVisible) {\n      execute(callback)\n      return\n    }\n\n    this._getElement().classList.remove(CLASS_NAME_SHOW)\n\n    this._emulateAnimation(() => {\n      this.dispose()\n      execute(callback)\n    })\n  }\n\n  dispose() {\n    if (!this._isAppended) {\n      return\n    }\n\n    EventHandler.off(this._element, EVENT_MOUSEDOWN)\n\n    this._element.remove()\n    this._isAppended = false\n  }\n\n  // Private\n  _getElement() {\n    if (!this._element) {\n      const backdrop = document.createElement('div')\n      backdrop.className = this._config.className\n      if (this._config.isAnimated) {\n        backdrop.classList.add(CLASS_NAME_FADE)\n      }\n\n      this._element = backdrop\n    }\n\n    return this._element\n  }\n\n  _configAfterMerge(config) {\n    // use getElement() with the default \"body\" to get a fresh Element on each instantiation\n    config.rootElement = getElement(config.rootElement)\n    return config\n  }\n\n  _append() {\n    if (this._isAppended) {\n      return\n    }\n\n    const element = this._getElement()\n    this._config.rootElement.append(element)\n\n    EventHandler.on(element, EVENT_MOUSEDOWN, () => {\n      execute(this._config.clickCallback)\n    })\n\n    this._isAppended = true\n  }\n\n  _emulateAnimation(callback) {\n    executeAfterTransition(callback, this._getElement(), this._config.isAnimated)\n  }\n}\n\nexport default Backdrop\n"]},"metadata":{},"sourceType":"script"}