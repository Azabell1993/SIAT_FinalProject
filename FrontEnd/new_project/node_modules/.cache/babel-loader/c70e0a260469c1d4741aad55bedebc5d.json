{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Login 페이지입니다.\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  for: \"memID\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"ID : \");\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = {\n  for: \"memPW\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"PW : \");\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Send\", -1\n/* HOISTED */\n);\n\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    action: \"/loginTest\",\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.sendPost && $options.sendPost(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"label\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    id: \"memID\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.memID = $event),\n    type: \"text\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.memID]])]), _hoisted_4, _hoisted_5, _createElementVNode(\"label\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    id: \"memPW\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.memPW = $event),\n    type: \"password\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.memPW]])]), _hoisted_8, _hoisted_9, _createCommentVNode(\" <input type=\\\"submit\\\" value=\\\"로그인\\\"> \"), _hoisted_10, _hoisted_11, _createCommentVNode(\" @click=\\\"onClickRedirect()\\\" \"), _createTextVNode(_toDisplayString($options.loginMemID), 1\n  /* TEXT */\n  )], 32\n  /* HYDRATE_EVENTS */\n  )]);\n}","map":{"version":3,"mappings":";;gCAEIA,oBAAsB,IAAtB,EAAsB,IAAtB,EAAI,eAAJ,EAAiB;AAAA;AAAjB;;;EAEWC,GAAG,EAAC;;;iDAAQ;;gCAA2DD,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gCAAIA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;EAC3EC,GAAG,EAAC;;;iDAAQ;;gCAA+DD,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gCAAIA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;iCAEtFA,oBAAqB,QAArB,EAAqB,IAArB,EAAQ,MAAR,EAAY;AAAA;AAAZ;;iCAAqBA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;uBANzBE,oBAWM,KAXN,EAWM,IAXN,EAWM,CAVNC,UAUM,EATNH,oBAOO,MAPP,EAOO;IAPDI,MAAM,EAAC,YAON;IAPoBC,QAAM,wDAAUC,+CAAV,EAAkB,WAAlB;EAO1B,CAPP,GACIN,oBAA8E,OAA9E,cAA8E,6BAAtDA,oBAA8C,OAA9C,EAA8C;IAAvCO,EAAE,EAAC,OAAoC;+DAAnBC,cAAKC,OAAc;IAAZC,IAAI,EAAC;EAAO,CAA9C;;EAAA,kBAA2BF,cAA2B,CAA9E,GAA8EG,YAAIC,YAClFZ,oBAAkF,OAAlF,cAAkF,6BAA1DA,oBAAkD,OAAlD,EAAkD;IAA3CO,EAAE,EAAC,OAAwC;+DAAvBC,cAAKC,OAAkB;IAAhBC,IAAI,EAAC;EAAW,CAAlD;;EAAA,kBAA2BF,cAA+B,CAAlF,GAAkFK,YAAIC,YACtFC,gEACAC,aAAqBC,aACrBF,yFACET,sBAAU;EAAA;IANhB;;EAAA,CASM,CAXN","names":["_createElementVNode","for","_createElementBlock","_hoisted_1","action","onSubmit","$options","id","$data","$event","type","_hoisted_4","_hoisted_5","_hoisted_8","_hoisted_9","_createCommentVNode","_hoisted_10","_hoisted_11"],"sourceRoot":"","sources":["C:\\study\\project\\SIAT_FinalProject\\FrontEnd\\new_project\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\n    <div>\n    <h1>Login 페이지입니다.</h1>\n    <form action=\"/loginTest\" @submit.prevent=\"sendPost\">\n        <label for=\"memID\">ID : <input id=\"memID\" v-model=\"memID\" type=\"text\"></label><br><br>\n        <label for=\"memPW\">PW : <input id=\"memPW\" v-model=\"memPW\" type=\"password\"></label><br><br>\n        <!-- <input type=\"submit\" value=\"로그인\"> -->\n        <button>Send</button><br>\n        <!-- @click=\"onClickRedirect()\" -->\n        {{loginMemID}}\n    </form>\n\n    </div>\n</template>\n<script>\nimport axios from 'axios'\nimport store from '@/store'\n\n\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*'\n\nexport default {\n  data () {\n    return {\n      memID: '',\n      memPW: '',\n    }\n  },\n  computed: {\n    loginMemID () {\n      let loginUserID = store.state.loginUser.memID\n      loginUserID = this.memID\n      return loginUserID\n    }\n  },\n  methods: {\n    sendPost () {\n      console.log(this.memID, this.loginMemID)\n      axios.post('http://192.168.0.81:9292/loginProc', {\n        memID: this.memID,\n        memPW: this.memPW\n      })\n        .then(function (res) {\n          if(res.data.memID == this.loginMemID){\n            console.log(\"ID가 일치합니다.\")\n          }\n          else {\n            console.log(\"ID가 틀렸습니다.\")\n          }\n          console.log(res.data)\n          console.log(res.data.mem.memID)\n          console.log(res.data.mem.memRole.roleCode)\n        }).catch(function (error) {\n          console.log(error)\n        })\n    },\n    onClickRedirect (){\n       window.open(\"http://localhost:8080/\");  \n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}