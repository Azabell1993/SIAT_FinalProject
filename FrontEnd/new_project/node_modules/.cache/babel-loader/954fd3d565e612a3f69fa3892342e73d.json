{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"회원 약관 페이지입니다.\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  action: \"/signupPage\",\n  method: \"get\",\n  class: \"usersignup\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"check_all\"\n}, \"전체 동의\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"check_1\"\n}, \"개인정보 처리방침 동의\", -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"check_2\"\n}, \"서비스 이용약관 동의\", -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"check_3\"\n}, \"마케팅 수신 동의\", -1\n/* HOISTED */\n);\n\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"reset\",\n  value: \"초기화\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"submit\",\n  id: \"check_submit\",\n  value: \"회원가입 하러가기\"\n}, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    id: \"check_all\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.check_all = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelCheckbox, _ctx.check_all]]), _hoisted_4, _hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    id: \"check_1\",\n    class: \"normal\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.check_1 = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelCheckbox, _ctx.check_1]]), _hoisted_6, _hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    id: \"check_2\",\n    class: \"normal\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.check_2 = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelCheckbox, _ctx.check_2]]), _hoisted_8, _hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    id: \"check_3\",\n    class: \"normal\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.check_3 = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelCheckbox, _ctx.check_3]]), _hoisted_10, _hoisted_11, _hoisted_12, _hoisted_13])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;gCACTC,oBAEO,KAFP,EAEO,IAFP,EAEO,cADLA,oBAAsB,IAAtB,EAAsB,IAAtB,EAAI,eAAJ,CACK,CAFP;;AAAA;;;EAIMC,MAAM,EAAC;EAAcC,MAAM,EAAC;EAAMH,KAAK,EAAC;;;gCAE1CC,oBAAoC,OAApC,EAAoC;EAA7BG,GAAG,EAAC;AAAyB,CAApC,EAAuB,OAAvB,EAA4B;AAAA;AAA5B;;gCAAoCH,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gCAGpCA,oBAAyC,OAAzC,EAAyC;EAAlCG,GAAG,EAAC;AAA8B,CAAzC,EAAqB,cAArB,EAAiC;AAAA;AAAjC;;gCAAyCH,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gCAGzCA,oBAAwC,OAAxC,EAAwC;EAAjCG,GAAG,EAAC;AAA6B,CAAxC,EAAqB,aAArB,EAAgC;AAAA;AAAhC;;gCAAwCH,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;iCAGxCA,oBAAsC,OAAtC,EAAsC;EAA/BG,GAAG,EAAC;AAA2B,CAAtC,EAAqB,WAArB,EAA8B;AAAA;AAA9B;;iCAAsCH,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;iCACtCA,oBAAgC,OAAhC,EAAgC;EAAzBI,IAAI,EAAC,OAAoB;EAAZC,KAAK,EAAC;AAAM,CAAhC;;AAAA;;iCACAL,oBAAyD,OAAzD,EAAyD;EAAlDI,IAAI,EAAC,QAA6C;EAApCE,EAAE,EAAC,cAAiC;EAAlBD,KAAK,EAAC;AAAY,CAAzD;;AAAA;;;uBAlBNE,oBAoBM,KApBN,cAoBM,CAnBJC,UAmBI,EAfJR,oBAcO,MAdP,cAcO,iBAbHA,oBAA0D,OAA1D,EAA0D;IAAnDI,IAAI,EAAC,UAA8C;IAAnCE,EAAE,EAAC,WAAgC;+DAAXG,iBAASC;EAAE,CAA1D;;EAAA,sBAA+CD,iBAa5C,EAZHE,UAYG,EAZiCC,UAYjC,kBAVHZ,oBAAqE,OAArE,EAAqE;IAA9DI,IAAI,EAAC,UAAyD;IAA9CE,EAAE,EAAC,SAA2C;IAAjCP,KAAK,EAAC,QAA2B;+DAATU,eAAOC;EAAE,CAArE;;EAAA,sBAA4DD,eAUzD,EATHI,UASG,EATsCC,UAStC,kBAPHd,oBAAqE,OAArE,EAAqE;IAA9DI,IAAI,EAAC,UAAyD;IAA9CE,EAAE,EAAC,SAA2C;IAAjCP,KAAK,EAAC,QAA2B;+DAATU,eAAOC;EAAE,CAArE;;EAAA,sBAA4DD,eAOzD,EANHM,UAMG,EANqCC,UAMrC,kBAJHhB,oBAAqE,OAArE,EAAqE;IAA9DI,IAAI,EAAC,UAAyD;IAA9CE,EAAE,EAAC,SAA2C;IAAjCP,KAAK,EAAC,QAA2B;+DAATU,eAAOC;EAAE,CAArE;;EAAA,sBAA4DD,eAIzD,EAHHQ,WAGG,EAHmCC,WAGnC,EAFHC,WAEG,EADHC,WACG,CAdP,CAeI,CApBN","names":["class","_createElementVNode","action","method","for","type","value","id","_createElementBlock","_hoisted_2","_ctx","$event","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13"],"sourceRoot":"","sources":["/Users/azabell/Desktop/SIAT_FinalProject/FrontEnd/new_project/src/views/SignUpCk.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div>\n      <h1>회원 약관 페이지입니다.</h1>\n     </div>\n     \n    <form action=\"/signupPage\" method=\"get\" class=\"usersignup\">\n        <input type=\"checkbox\" id=\"check_all\" v-model=\"check_all\">\n        <label for=\"check_all\">전체 동의</label><br>\n        \n        <input type=\"checkbox\" id=\"check_1\" class=\"normal\" v-model=\"check_1\">\n        <label for=\"check_1\">개인정보 처리방침 동의</label><br>\n        \n        <input type=\"checkbox\" id=\"check_2\" class=\"normal\" v-model=\"check_2\">\n        <label for=\"check_2\">서비스 이용약관 동의</label><br>\n        \n        <input type=\"checkbox\" id=\"check_3\" class=\"normal\" v-model=\"check_3\">\n        <label for=\"check_3\">마케팅 수신 동의</label><br>\n        <input type=\"reset\" value=\"초기화\">\n        <input type=\"submit\" id=\"check_submit\" value=\"회원가입 하러가기\">\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*'\n\nexport default {\n  \n  data() {\n    return {\n        memEmail:'test@test.com',\n        memBirth:'1990-01-01',\n        \n        signup: {\n          memID:null,\n          //memIDCheck:null,\n          memPW:null,\n          memPWCheck:null,\n          memName:null,\n          memAddr:null,\n          memPhone:'010-1234-5678',\n          },\n          idValidFlag: true,\n          passwordValidFlag: true,\n          \n          idCheck:'',\n          passwordCheck: '',\n    };\n  }, /* export default */\n  methods: {\n    /* 아이디 정규식 */\n    idValid () {\n      if( /^[A-Za-z]{1}[A-Za-z0-9]{3,19}$/.test(this.signup.memID)) {        \n        this.idValidFlag = true\n      } else {\n        this.idValidFlag = false\n      }\n    },\n    idCheckValid() {\n        if (this.signup.memID === this.idCheck) {\n        this.idCheck = true\n      } else {\n        this.idCheck = false\n      }\n    },\n\n    /* 비밀번호 정규식 */\n    passwordValid () {\n      if (/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,16}$/.test(this.signup.memPW)) {\n        this.passwordValidFlag = true\n      } else {\n        this.passwordValidFlag = false\n      }\n    },\n     passwordCheckValid () {\n      if (this.signup.memPW === this.passwordCheck) {\n        this.passwordCheckFlag = true\n      } else {\n        this.passwordCheckFlag = false\n      }\n    },\n\n    /* 아이디 중복 체크 */\n    checkId () {\n      //console.log('ID test')\n\n      /* 정규식 검사 */\n      if(!(this.idValidFlag)) {\n        alert(\"사용할 수 없는 조합의 아이디입니다.\");\n      } else{\n         /* DB와 비교하기 */\n      axios.post('http://192.168.0.81:9292/idCheckProc', {\n        memID: this.signup.memID\n      })\n        .then(function (idchk) {\n          if(idchk.data.data === 'false') {\n            alert(\"사용 가능\");\n          } else {\n            alert(\"이미 누가 사용하고 있는 아이디입니다.\");\n          }\n        })\n        .catch(function (error) {\n          //console.log(error)\n        })\n      }\n\n    },\n    /* pw check */\n    checkPw() {\n      if(!(this.passwordValidFlag)) {\t\t\n        alert(\"사용할 수 없는 조합입니다.\\n패스워드 설정안내를 확인해 주세요.\");\t\t\n        return false;\n      }\n      alert(\"사용 가능한 비밀번호 입니다.\");\n      return true;\n    },\n    \n    /* 회원가입 정보 전체 넘기기 */\n    signUpProc() {    \n\n      console.log('ID test')\n\n      if(!this.signup.memID) {\n        alert(\"아이디를 입력해주세요!\");\n        this.$refs.memIDck.focus(); //방식으로 선택자를 찾는다.\n        return;\n      } else if(!this.signup.memPW) {\n        alert(\"비밀번호를 입력해주세요!\");\n        this.$refs.memPWck.focus(); //방식으로 선택자를 찾는다.\n        return;\n      } else if(!this.memEmail) {\n        alert(\"이메일을 입력해주세요!\");\n        this.$refs.memEmailck.focus(); //방식으로 선택자를 찾는다.\n        return;\n      } else if(!this.signup.memPWCheck) {\n        alert(\"비밀번호를 확인해주세요!\");\n        this.$refs.memPWck2.focus();\n      } else if(!this.memName) {\n        alert(\"이름을 입력해주세요!\");\n        this.$refs.memNameck.focus();\n      } else if(!this.memAddr) {\n        alert(\"주소를 입력해주세요!\");\n        this.$refs.memAddrck.focus();\n      } else{\n        axios.post('http://192.168.0.81:9292/signUpProc', {\n          memID: this.signup.memID,\n          //memIDCheck: this.signup.memIDCheck,\n          memPW: this.signup.memPW,\n          memPWCheck: this.signup.memPWCheck,\n          memName: this.signup.memName,\n          memAddr: this.signup.memAddr,\n          memPhone: this.signup.memPhone,\n          memEmail: this.memEmail,\n          memBirth: this.memBirth  \n        }) .then(function (datatest) {\n            //console.log(datatest.data);\n            alert(\"회원가입 완료\");\n          }).catch(function (error) {\n            //console.log(error)\n          })\n      }\n    } // signUpProc\n  } // methods\n\n} // export default\n</script>\n\n"]},"metadata":{},"sourceType":"module"}